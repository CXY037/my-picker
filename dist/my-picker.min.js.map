{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///my-picker.min.js","webpack:///webpack/bootstrap 0ee9463ca50fdb597033","webpack:///./dist/my-picker.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","myJquery","default","document","em","window","devicePixelRatio","Math","min","innerWidth","innerHeight","WHEEL_HEIGHT","WHEEL_ITEM_ANGLE","WHEEL_ITEM_HIGHT","WHEEL_TRANSITION_TIME","_isIE","_androidVersion","userAgent","navigator","isIE","matches","tridentMap","4","5","6","7","match","isWebKit","indexOf","isFirefox","isAndroid","test","androidVersion","webkitVersionMap","exec","parseFloat","pop","major","minor","animationUtil","startAnimation","fn","stopAnimation","animationId","easeIn","t","b","easeOut","easeInOut","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","AWheel","list","valueHashMap","onSelectItemCallbackList","showAnimation","arguments","undefined","index","selectIndex","selectedValue","push","filter","_fn","dom","_this","forEach","_interopRequireDefault","obj","AudioImpl","audio","_domUtil2","MediaSource","WebkitMediaSource","isTypeSupported","mediaSource","src","URL","createObjectURL","addEventListener","e","sourceBuffer","addSourceBuffer","endOfStream","appendBuffer","_dataURLtoU8arr","dataURLtoU8arr","tick","on","volume","_domUtil","_browserUtil","_browserUtil2","play","currentTime","paused","ended","readyState","console","error","audioImpl","Picker_1","option","Picker","Col_1","defaultOption_1","Wheel3D_1","Wheel_1","browserUtil_1","util_1","Frame","version","options","_wheels","_cols","_option","assign","_frame","cols","Array","isArray","Col","wheel","_i","_col","isPerspective","Wheel","Wheel3D","body","append","getDOM","that","addSelectItemListener","onSelectItem","_i2","setValue","setValues","_visible","showCover","showFrame","hideCover","hideFrame","close","destroy","defaultValue","setOptions","getOptions","selectOption","values","getValue","colOption","prefix","suffix","labelKey","valueKey","type","item","defaultOptions","onOkClick","onCancelClick","fontSize","hasGlassCover","hasVoice","title","buttons","zIndex","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_typeof","Symbol","iterator","domUtil_1","em_1","animationUtil_1","constant_1","AWheel_1","perspectiveConversion","_AWheel_1$AWheel","picker","col","startDrag","event","currentTarget","offsetTop","parentElement","offsetY","touches","clientY","drag","endDrag","getPrototypeOf","maxAngle","minAngle","radius","sqrt","visibleAngle","originalAngle","lastIndexAngle","changeMaxAngle","angle","selectedIndex","speed","timeStamp","lastY","isDraging","css","contains","find","acos","PI","itemValueKey","transformValue","setSuffix","setPrefix","Date","now","parent","y","changeAngle","max","abs","setAngle","calcSelectedIndexByAngle","isInti","html","label","height","li","text","data","clickHandle","stopPropagation","preventDefault","flushLabel","calcAngleBySelectedIndex","start","_run","_angle","oldSelectedIndex","toggleSelected","rangeAngle","visible","round","each","eq","global","$","buildHTML","selector","trim","div","createElement","innerHTML","children","buildFragment","fragment","textContent","appendChild","insertDom","targets","clone","access","myjq","setter","toCamelCase","replace","splitChar","toUpperCase","domClone","hasSystem","cloneNode","dataKey","clearData","arr","nodeType","createDocumentFragment","$$mjid","random","init","doms","querySelectorAll","isNaN","add","child","appendTo","prepend","childNodes","insertBefore","prependTo","after","parentNode","lastChild","nextSibling","insertAfter","before","remove","removeChild","attr","setAttribute","getAttribute","removeAttr","addClass","className","classList","removeClass","hasClass","toggleClass","prop","val","hide","style","display","show","eventName","cacheFn","cacheEvent","off","tempArr","removeEventListener","toggle","requestAnimationFrame","cancelAnimationFrame","lastTime","vendors","x","callback","element","currTime","getTime","timeToCall","id","setTimeout","cancelRequestAnimationFrame","clearTimeout","cacheData","wheelHeight","ratio","0","1","2","3","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","dataurl","split","bstr","atob","u8arr","Uint8Array","charCodeAt","maxDistance","minDistance","originalDistance","lastIndexDistance","changeMaxDistance","distance","setDistance","changeDistance","calcSelectedIndexByDistance","calcDistanceBySelectedIndex","_Distance","rangeDistance","translateValue","_len","source","_key","to","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","cover","frame","_constant2","zoom","_resizeHandle","_em","bind","_constant","_this2"],"mappings":"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","file":"my-picker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar myJquery = __webpack_require__(12);\nexports.default = myJquery(document);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * @file 获取0.01em的实际像素值\r\n */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction em() {\n    //根据屏幕的dpr判断em大小。如果dpr不是1，说明不是pc屏幕，此时选取window.innerWidth和window.innerHeight最小值的100分之一做1em。\n    //如果dpr是1，表示可能是pc屏幕，此时要求控件不能过大，所以去window.innerWidth、window.innerHeight、650当中的最小值的100分之一做1em\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n        return Math.min(window.innerWidth, window.innerHeight) / 100;\n    } else {\n        return Math.min(window.innerWidth, window.innerHeight, 400) / 100;\n    }\n}\nexports.em = em;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    //滚轮的高度\n    WHEEL_HEIGHT: 85,\n    //在3D透视滚轮中，每个可选项在滚轮上的角度\n    WHEEL_ITEM_ANGLE: 15,\n    //在非3D透视滚轮中，一个滚轮的一个刻度的高度，单位是0.01em\n    // WHEEL_ITEM_HIGHT : 85 - (85 * 41.6 * 2 / 100) ,\n    WHEEL_ITEM_HIGHT: 85 - 85 * 41.6 * 2 / 100,\n    //滚轮因惯性而发生的减速滑动时间\n    WHEEL_TRANSITION_TIME: 400\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _isIE = void 0;\nvar _androidVersion = void 0;\nvar userAgent = navigator.userAgent;\nexports.default = {\n    /**\r\n     * 是否是IE\r\n     * @returns\r\n     */\n    isIE: function isIE() {\n        if (_isIE == null) {\n            _isIE = function () {\n                var matches = void 0;\n                var tridentMap = {\n                    '4': 8,\n                    '5': 9,\n                    '6': 10,\n                    '7': 11\n                };\n                matches = userAgent.match(/MSIE (\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!+matches[1];\n                }\n                matches = userAgent.match(/Trident\\/(\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!tridentMap[matches[1]] || false;\n                }\n                //we did what we could\n                return false;\n            }();\n        }\n        return _isIE;\n    },\n\n    /**\r\n     * 是否是webkit\r\n     * @returns\r\n     */\n    isWebKit: function isWebKit() {\n        return userAgent.indexOf('AppleWebKit') > -1;\n    },\n\n    /**\r\n     * 是否是火狐\r\n     * @returns\r\n     */\n    isFirefox: function isFirefox() {\n        return userAgent.indexOf('Gecko') > -1 && userAgent.indexOf('KHTML') == -1;\n    },\n\n    /**\r\n     * 判断是否是本安卓\r\n     */\n    isAndroid: function isAndroid() {\n        return (/Android/i.test(userAgent)\n        );\n    },\n\n    /**\r\n     * 判断是否是老版本安卓（小于安卓4.4）\r\n     */\n    androidVersion: function androidVersion() {\n        if (!_androidVersion) {\n            var webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(userAgent);\n            var appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n            _androidVersion = function () {\n                // This matches Android Major.Minor.Patch versions\n                // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n                var match = userAgent.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n                if (!match) {\n                    return null;\n                }\n                var major = match[1] && parseFloat(match[1]);\n                var minor = match[2] && parseFloat(match[2]);\n                if (major && minor) {\n                    return parseFloat(match[1] + '.' + match[2]);\n                } else if (major) {\n                    return major;\n                }\n                return null;\n            }();\n        }\n        return _androidVersion;\n    }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar animationUtil = __webpack_require__(13);\nexports.default = {\n    /**\r\n     * 动画开始函数\r\n     * @param {()=>void} fn             东航的回调\r\n     * @returns {number}                动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return animationUtil.startAnimation(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param {number} animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        animationUtil.stopAnimation(animationId);\n    },\n    /**\r\n     * 渐入效果插值\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeIn: function easeIn(t, b, c, d) {\n        return animationUtil.easeIn(t, b, c, d);\n    },\n    /**\r\n     * 淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return animationUtil.easeOut(t, b, c, d);\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        return animationUtil.easeInOut(t, b, c, d);\n    }\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * @file 选择器滚轮类的接口\r\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar AWheel = function () {\n    function AWheel() {\n        _classCallCheck(this, AWheel);\n\n        ////////////////////可选项属性\n        //可选项列表\n        this.list = [];\n        //根据值生成的hashmap,主要是为了快速获得value对应可选项的index\n        this.valueHashMap = {};\n        ////////////////////事件\n        this.onSelectItemCallbackList = [];\n    }\n    /**\r\n    * 获得用户可选的标签\r\n    */\n\n\n    _createClass(AWheel, [{\n        key: \"getOptions\",\n        value: function getOptions() {\n            return this.list;\n        }\n        /**\r\n        * 给定指定标签的值,选择指定标签\r\n        */\n\n    }, {\n        key: \"selectOption\",\n        value: function selectOption(value) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            //如果valueHashMap里面没有value,表示没有这个标签,否则自动选中这个标签\n            if (this.valueHashMap[value] != null) {\n                var index = this.valueHashMap[value];\n                this.selectIndex(index, showAnimation);\n            }\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /**\r\n         * 注册SelectItem的回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"addSelectItemListener\",\n        value: function addSelectItemListener(fn) {\n            this.onSelectItemCallbackList.push(fn);\n        }\n        /**\r\n         * 移除注册的SelectItem回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"removeSelectItemListener\",\n        value: function removeSelectItemListener(fn) {\n            this.onSelectItemCallbackList = this.onSelectItemCallbackList.filter(function (_fn) {\n                return _fn !== fn;\n            });\n        }\n        ////////////////////////////DOM相关\n\n    }, {\n        key: \"getDOM\",\n        value: function getDOM() {\n            return this.dom;\n        }\n        /////////////////////////////wheel事件相关\n        /**\r\n        * 触发回调函数的接口\r\n        * @param index\t\t\t当前被选值的索引\r\n        * @param value\t\t\t当前被选值的值\r\n        */\n\n    }, {\n        key: \"toggleSelected\",\n        value: function toggleSelected(index, value) {\n            var _this = this;\n\n            this.onSelectItemCallbackList.forEach(function (fn) {\n                fn.call(_this, index, value);\n            });\n        }\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.onSelectItemCallbackList = null;\n        }\n    }]);\n\n    return AWheel;\n}();\n\nexports.AWheel = AWheel;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _domUtil = __webpack_require__(0);\n\nvar _domUtil2 = _interopRequireDefault(_domUtil);\n\nvar _browserUtil = __webpack_require__(3);\n\nvar _browserUtil2 = _interopRequireDefault(_browserUtil);\n\nvar _dataURLtoU8arr = __webpack_require__(16);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 滚轮滚动时候发声的函数,是一个单例模式\r\n */\nvar tick = __webpack_require__(17);\n\n\nfunction AudioImpl() {\n    var _this = this;\n\n    //#4，如果支持mse优先使用mse，这样解决base64禁止发音的问题\n    this.audio = (0, _domUtil2.default)('<audio></audio>')[0];\n\n    var MediaSource = window.MediaSource || window.WebkitMediaSource;\n    if (MediaSource && MediaSource.isTypeSupported('audio/mpeg')) {\n        var mediaSource = new MediaSource();\n        this.audio.src = URL.createObjectURL(mediaSource);\n        mediaSource.addEventListener('sourceopen', function (e) {\n            var sourceBuffer = mediaSource.addSourceBuffer('audio/mpeg');\n            sourceBuffer.addEventListener('updateend', function () {\n                mediaSource.endOfStream();\n            });\n            sourceBuffer.appendBuffer((0, _dataURLtoU8arr.dataURLtoU8arr)(tick));\n        });\n    } else {\n        this.audio.src = tick;\n    }\n    (0, _domUtil2.default)(this.audio).on('loadedmetadata', function () {\n        _this.audio.volume = 0.2;\n    });\n}\n\nAudioImpl.prototype.play = function () {\n    try {\n        if (this.audio) {\n            // #5 参考https://stackoverflow.com/questions/36803176/how-to-prevent-the-play-request-was-interrupted-by-a-call-to-pause-error\n            var isPlaying = this.audio.currentTime > 0 && !this.audio.paused && !this.audio.ended && this.audio.readyState > 2;\n\n            if (!isPlaying) {\n                this.audio.play();\n                if (_browserUtil2.default.isAndroid() && _browserUtil2.default.androidVersion() < 5) {\n                    this.audio = (0, _domUtil2.default)('<audio></audio>')[0];\n                    this.audio.src = tick;\n                }\n            }\n        }\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nvar audioImpl;\n\nmodule.exports = function () {\n    if (audioImpl) {\n        return audioImpl;\n    } else {\n        audioImpl = new AudioImpl();\n        return audioImpl;\n    }\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Picker_1 = __webpack_require__(8);\n__webpack_require__(21);\n__webpack_require__(22);\n__webpack_require__(23);\nmodule.exports = function (option) {\n    return new Picker_1.Picker(option);\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Col_1 = __webpack_require__(9);\nvar defaultOption_1 = __webpack_require__(10);\nvar Wheel3D_1 = __webpack_require__(11);\nvar Wheel_1 = __webpack_require__(18);\nvar browserUtil_1 = __webpack_require__(3);\nvar util_1 = __webpack_require__(19);\nvar Frame = __webpack_require__(20);\nvar version = \"v1.0.0\";\n\nvar Picker = function () {\n    function Picker(options) {\n        _classCallCheck(this, Picker);\n\n        //滚轮列表\n        this._wheels = [];\n        //主框架\n        this._cols = [];\n        this.version = version;\n        //用用户配置,覆盖默认配置,生成当前控件的实例的配置\n        this._option = util_1.default.assign({}, defaultOption_1.default, options);\n        //主架\n        this._frame = new Frame(this, this._option);\n        //解析cols属性,将其转换为Cols的数组\n        var cols = [],\n            i = 0;\n        if (Array.isArray(this._option.cols)) {\n            //如果cols为空数组,或者里面的元素是字符串,表示仅一个滚轮,就是cols本身\n            if (this._option.cols.length === 0 || typeof this._option.cols[0] === 'string') {\n                cols.push(new Col_1.Col(this._option.cols));\n            } else {\n                //否则表示数组中的每个元素都是个滚轮\n                for (i = 0; i < this._option.cols.length; i++) {\n                    cols.push(new Col_1.Col(this._option.cols[i]));\n                }\n            }\n        } else {\n            //如果不是数组,表示有cols是一个json形式配置的滚轮\n            cols.push(new Col_1.Col(this._option.cols));\n        }\n        this._cols = cols;\n        //构造滚轮\n        this._wheels = [];\n        var wheel, col;\n        for (var _i = 0; _i < cols.length; _i++) {\n            var _col = cols[_i];\n            //设置滚轮\n            wheel = !browserUtil_1.default.isIE() && !(browserUtil_1.default.isAndroid() && browserUtil_1.default.androidVersion() < 4.4) && this._option.isPerspective ? new Wheel3D_1.Wheel3D(this, _col, this._option, _i) : new Wheel_1.Wheel(this, _col, this._option, _i);\n            this._wheels.push(wheel);\n            this._frame.body().append(wheel.getDOM());\n            //重写wheel的onSelectItem事件\n            var that = this;\n            wheel.addSelectItemListener(function (i) {\n                return function (index, value) {\n                    //如果用户注册了onSelectItem\n                    if (typeof that._option.onSelectItem == 'function') {\n                        that._option.onSelectItem.call(that, i, index, value);\n                    }\n                };\n            }(_i));\n        }\n        for (var _i2 = 0; _i2 < cols.length; _i2++) {\n            //设置滚轮的选项\n            that.setValue(_i2, that._option.setValues[_i2]);\n        }\n        //是否可见\n        this._visible = false;\n    }\n    //是否可见\n\n\n    _createClass(Picker, [{\n        key: \"show\",\n\n        /**\r\n         * 显示\r\n         */\n        value: function show() {\n            this._frame.showCover();\n            this._frame.showFrame();\n            this._visible = true;\n        }\n        /**\r\n         * 隐藏\r\n         */\n\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this._frame.hideCover();\n            this._frame.hideFrame();\n            this._visible = false;\n        }\n        /**\r\n         * 关闭\r\n         */\n\n    }, {\n        key: \"close\",\n        value: function close() {\n            this._frame.close();\n            this._frame.hideCover();\n            this._option = null;\n            this._wheels.forEach(function (wheel) {\n                return wheel.destroy();\n            });\n            this._wheels = null;\n            this._frame = null;\n            this._cols = null;\n        }\n        /**\r\n         * 设置滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {any[]} list      滚轮的可选值列表\r\n         * @param {*} defaultValue  默认值,如果为空会以当前值作为默认值。如果没有当前值会以第一个值作为默认值\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(index, list, defaultValue) {\n            if (this._wheels[index]) this._wheels[index].setOptions(list, defaultValue);\n        }\n        /**\r\n         * 获取滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions(index) {\n            if (this._wheels[index]) {\n                return this._wheels[index].getOptions();\n            } else {\n                return null;\n            }\n        }\n        /**\r\n         * 设置滚轮的可选值\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {*} value         设置的值\r\n         */\n\n    }, {\n        key: \"setValue\",\n        value: function setValue(index, value) {\n            if (this._wheels[index]) this._wheels[index].selectOption(value);\n        }\n        /**\r\n         * 获取滚轮的值,如果index为空表示获取所有滚轮的值\r\n         * @param {number} index    滚轮的index,从0开始记录。如果为空表示获取所有滚轮的值\r\n         */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (index != null) {\n                if (this._wheels[index]) return this._wheels[index].getValue();\n            } else {\n                var values = [];\n                var i;\n                for (i = 0; i < this._cols.length; i++) {\n                    values.push(this._wheels[i].getValue());\n                }\n                return values;\n            }\n        }\n    }, {\n        key: \"visible\",\n        get: function get() {\n            return this._visible;\n        }\n    }]);\n\n    return Picker;\n}();\n\nexports.Picker = Picker;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * @file 将用户数据封装为列对象\r\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Col = function () {\n    function Col(colOption) {\n        _classCallCheck(this, Col);\n\n        this.prefix = \"\";\n        this.suffix = \"\";\n        this.labelKey = \"label\";\n        this.valueKey = \"value\";\n        //列的类型，0：未知 1：字符串数组 2：对象数组\n        this.type = 0;\n        //如果option是一个数组,视为仅存在options的情况\n        if (Array.isArray(colOption)) {\n            this.options = colOption;\n            this.type = 1;\n        } else {\n            this.options = colOption.options || [];\n            if (this.options.length > 0) {\n                if (typeof this.options[0] === 'string') {\n                    this.type = 1;\n                } else {\n                    this.type = 2;\n                }\n            } else {\n                this.type = 0;\n            }\n            this.prefix = colOption.prefix || \"\";\n            this.suffix = colOption.suffix || \"\";\n            this.labelKey = colOption['labelKey'] || this.labelKey;\n            this.valueKey = colOption['valueKey'] || this.valueKey;\n        }\n    }\n\n    _createClass(Col, [{\n        key: \"push\",\n        value: function push(item) {\n            this.options.push(item);\n        }\n    }, {\n        key: \"set\",\n        value: function set(index, item) {\n            if (this.type == 0) {\n                this.type = typeof item === 'string' ? 1 : 2;\n            }\n            this.options[index] = item;\n        }\n    }, {\n        key: \"setCol\",\n        value: function setCol() {}\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.valueKey];\n            }\n        }\n    }, {\n        key: \"getLabel\",\n        value: function getLabel(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.labelKey];\n            }\n        }\n    }]);\n\n    return Col;\n}();\n\nexports.Col = Col;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * 用户默认配置\r\n */\nvar defaultOptions = {\n    cols: [[]],\n    setValues: [],\n    onSelectItem: null,\n    onOkClick: null,\n    onCancelClick: null,\n    fontSize: 15,\n    isPerspective: true,\n    hasGlassCover: true,\n    hasVoice: true,\n    title: '',\n    buttons: [\"确定\", \"取消\"],\n    zIndex: 100\n};\nexports.default = defaultOptions;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar em_1 = __webpack_require__(1);\nvar animationUtil_1 = __webpack_require__(4);\nvar constant_1 = __webpack_require__(2);\nvar AWheel_1 = __webpack_require__(5);\nvar perspectiveConversion = __webpack_require__(14);\nvar tick = __webpack_require__(6)();\n\nvar Wheel3D = function (_AWheel_1$AWheel) {\n    _inherits(Wheel3D, _AWheel_1$AWheel);\n\n    function Wheel3D(picker, col, option, index) {\n        _classCallCheck(this, Wheel3D);\n\n        ///////////////////滚轮显示属性\n        //最大转角\n        var _this = _possibleConstructorReturn(this, (Wheel3D.__proto__ || Object.getPrototypeOf(Wheel3D)).call(this));\n\n        _this.maxAngle = 0;\n        //最小转角,设置可选项列表后需重新计算\n        _this.minAngle = 0;\n        //滚轮的实际半径,因为有透视效果,所以滚轮实际半径比容器的高度的一半还小。根据勾股定理,计算得实际半径是容器高度的根号5分之1\n        _this.radius = constant_1.default.WHEEL_HEIGHT / Math.sqrt(5);\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        _this.visibleAngle = 0;\n        //获取0.01em的实际像素值\n        _this.em = em_1.em;\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        _this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的转角,用于计算滚轮是否转动过\n        _this.originalAngle = 0;\n        //一次拖动过程中滚轮被转动的最大角度\n        _this.lastIndexAngle = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        _this.changeMaxAngle = 0;\n        //当前滚轮转角\n        _this.angle = 0;\n        //当前被选值的index\n        _this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        _this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        _this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        _this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        _this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        _this.isDraging = false;\n        ///////////////////主要属性\n        //picker对象\n        _this.picker = picker;\n        //option对象\n        _this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        _this.index = index;\n        //转轮主体\n        _this.dom = domUtil_1.default('<div class=\"picker-wheel3d\">' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '<ul></ul>' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '</div>').css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        _this.contains = _this.dom.find('ul');\n        ///////////////////滚轮显示属性\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        _this.visibleAngle = 90 - Math.acos(_this.radius / constant_1.default.WHEEL_HEIGHT * 2) / Math.PI * 180;\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        _this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        _this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = _this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        _this.dom[0].addEventListener(\"touchstart\", startDrag);\n        _this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        _this.dom[0].addEventListener(\"touchmove\", drag);\n        _this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        _this.dom[0].addEventListener(\"touchend\", endDrag);\n        _this.dom[0].addEventListener(\"mouseup\", endDrag);\n        _this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //初始化标签\n        var transformValue = \"translateZ(\" + _this.radius / 100 + \"em) scale(0.75)\";\n        _this.dom.find(\".picker-label\").css(\"-webkit-transform\", transformValue).css(\"transform\", transformValue);\n        //设置标签\n        _this.setSuffix(col.suffix);\n        _this.setPrefix(col.prefix);\n        _this.setOptions(col.options, null, true);\n        return _this;\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel3D, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalAngle = this.angle;\n            this.changeMaxAngle = 0;\n            this.lastIndexAngle = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算转角变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeAngle = (perspectiveConversion(this.lastY, this.radius, constant_1.default.WHEEL_HEIGHT) - perspectiveConversion(y, this.radius, constant_1.default.WHEEL_HEIGHT)) / Math.PI * 180;\n            var angle = changeAngle + this.angle;\n            //记录滚轮滚动的最大转角\n            this.changeMaxAngle = Math.max(Math.abs(this.originalAngle - angle), this.changeMaxAngle);\n            //记录当前角度\n            this.setAngle(angle);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeAngle) {\n                this.speed = changeAngle / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的angle。之所以乘4是根据偏移效果经验得到的\n            var changeAngle = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var angle = changeAngle + this.angle;\n            //根据角度计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByAngle(angle);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小转角\n            this.maxAngle = constant_1.default.WHEEL_ITEM_ANGLE * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label,\n\n            //显示标签的dom的高度,要求根据wheelItemAngle计算,使各个标签dom的边缘刚好挨在一起,确保没有空细\n            height = this.radius * Math.PI * constant_1.default.WHEEL_ITEM_ANGLE / 180;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(角度)\n                var li = domUtil_1.default(\"<li></li>\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var angle = constant_1.default.WHEEL_ITEM_ANGLE * -index;\n                //为了解决3d放大后，文字模糊的问题，故采用zoom=2的方案，所以li的尺寸方面，统一缩小一半\n                var transformValue = \"rotateX(\" + angle + \"deg) translateZ(\" + that.radius / 100 + \"em) scale(0.75)\";\n                li.css(\"-webkit-transform\", transformValue).css(\"transform\", transformValue).css(\"padding\", height / 5.9 / 100 + \"em 0\").css(\"height\", height / 100 + \"em\").css(\"line-height\", height / 100 + \"em\");\n                //将标签的角度保存到其dom中\n                li.data(\"angle\", angle);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxAngle < 1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            //刷新标签\n            this.flushLabel();\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var angle = this.calcAngleBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _angle = animationUtil_1.default.easeOut(start, that.angle, angle - that.angle, during);\n                    if (Math.abs(_angle - angle) < 1) {\n                        _angle = angle;\n                    }\n                    that.setAngle(_angle);\n                    if (_angle != angle) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setAngle(angle);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定角度,自动设定标签的各个位置\r\n        * @param {number} angle\t\t要转到的角度\r\n        * @returns {number}\t\t\t修正后的角度,即最终的实际角度\r\n        */\n\n    }, {\n        key: \"setAngle\",\n        value: function setAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = this.rangeAngle(angle);\n            // 如果角度变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexAngle = this.lastIndexAngle;\n                var index = this.calcSelectedIndexByAngle(angle);\n                if (lastIndexAngle != index) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexAngle = index;\n            }\n            this.contains.css(\"-webkit-transform\", \"rotateX(\" + angle + \"deg)\").css(\"transform\", \"rotateX(\" + angle + \"deg)\");\n            this.angle = angle;\n            this.flushLabel();\n            return angle;\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByAngle\",\n        value: function calcSelectedIndexByAngle(angle) {\n            angle = this.rangeAngle(angle);\n            return Math.round(Math.abs(angle / constant_1.default.WHEEL_ITEM_ANGLE));\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcAngleBySelectedIndex\",\n        value: function calcAngleBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_ANGLE;\n        }\n        /**\r\n        * 限制转角超过极限值\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeAngle\",\n        value: function rangeAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = Math.max(this.minAngle, angle);\n            angle = Math.min(this.maxAngle, angle);\n            return angle;\n        }\n        /**\r\n        * 刷新各个标签的状态,确定应该显示哪些标签\r\n        */\n\n    }, {\n        key: \"flushLabel\",\n        value: function flushLabel() {\n            var that = this;\n            this.dom.find(\"li\").each(function (index, li) {\n                li = domUtil_1.default(li);\n                var angle = li.data(\"angle\") + that.angle;\n                if (angle > that.visibleAngle || angle < -that.visibleAngle) {\n                    if (li.css(\"display\") != \"none\") {\n                        li.css(\"display\", \"none\");\n                    }\n                } else {\n                    if (li.css(\"display\") != \"block\") {\n                        li.css(\"display\", \"block\");\n                    }\n                }\n            });\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n    }]);\n\n    return Wheel3D;\n}(AWheel_1.AWheel);\n\nexports.Wheel3D = Wheel3D;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n(function (global, factory) {\r\n\t\"use strict\"\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\tmodule.exports = factory;\r\n\t} else {\r\n\t\tglobal.$ = factory(global.document);\r\n\t}\r\n})(typeof window !== \"undefined\" ? window : this, function (document) {\r\n\r\n\t//用于插入使用的DocumentFragment\r\n\tvar fragment = document.createDocumentFragment();\r\n\r\n\t//将html解析为my-jquery对象\r\n\tfunction buildHTML(selector) {\r\n\t\tselector = selector.trim();\r\n\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\tif(selector[0] === \"<\"){\r\n\t\t\t//用于使用innerHTML生成dom的div\r\n\t\t\tvar div = document.createElement(\"DIV\");\r\n\t\t\tdiv.innerHTML = selector;\r\n\t\t\treturn $(div.children);\r\n\t\t} else {\r\n\t\t\treturn $([]);\r\n\t\t}\r\n\t}\r\n\r\n\t//将html解析为fragment对象\r\n\tfunction buildFragment(dom) {\r\n\t\tvar dom = $(dom);\r\n\t\tfragment.textContent = \"\";\r\n\t\tdom.each(function (i, item) {\r\n\t\t\tfragment.appendChild(item);\r\n\t\t})\r\n\t\treturn fragment;\r\n\t}\r\n\r\n\t//将各种要插入对象做成一个buildFragment,根据fn插入\r\n\tfunction insertDom(targets, dom, fn) {\r\n\t\t//如果插入到的元素是多个,克隆之后再插入\r\n\t\ttargets.each(function (i, item) {\r\n\t\t\tif(i != targets.length-1){\r\n\t\t\t\tfn(this, buildFragment(dom.clone()));\r\n\t\t\t} else {\r\n\t\t\t\tfn(this, buildFragment(dom));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//一个模板,用于生成setter和getter重载函数\r\n\tfunction access(myjq, setter, getter, key, value) {\r\n\t\t//是否是setter方法,如果是setter方法,value不能是undefined\r\n\t\treturn value === undefined ? (myjq.length ? getter(myjq[0], key) : undefined) : myjq.each(function (index, item) {\r\n\t\t\treturn setter(item, key, value)\r\n\t\t})\r\n\t}\r\n\r\n    //短横线隔开式命名转驼峰命名\r\n    function toCamelCase(name) {\r\n        return name.replace(/-\\S/g, function (splitChar) {\r\n            return splitChar[1].toUpperCase();\r\n        });\r\n    }\r\n\r\n    //克隆dom\r\n\tfunction domClone(item, hasSystem) {\r\n\t\tvar dom = item.cloneNode(true);\r\n\t\thasSystem && item[dataKey] && (dom[dataKey] = item[dataKey]);\r\n\r\n\t\treturn dom;\r\n\t}\r\n\r\n\t//删除dom时候使用\r\n\tfunction clearData(item) {\r\n\t\tvar arr;\r\n\t\tif(item.nodeType == 1){\r\n\t\t\tdelete item[dataKey];\r\n\t\t\tarr = item.children;\r\n\t\t} else if(item && item.length != null){\r\n\t\t\tarr = item;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor(var i; i < arr.length; i++){\r\n\t\t\tclearData(arr[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t//防止冲突的id\r\n\tvar $$mjid = (\"\" + Date.now() +  Math.random()).replace('.', '');\r\n\t//dom缓存的key\r\n\tvar dataKey = \"$$mjid\" + $$mjid\r\n\r\n\tvar $ = function(selector){\r\n\t\treturn new $.fn.init(selector);\r\n\t}\r\n\r\n\t$.fn = $.prototype = {\r\n\t\t//唯一id\r\n\t\t$$mjid : $$mjid,\r\n\r\n\t\t//jquery对象原型\r\n\t\tinit : function(selector){\r\n\r\n\t\t\t//如果没有选择器，直接返回\r\n\t\t\tif(!selector){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof selector == \"string\"){\r\n\t\t\t\t//如果是字符串，表示可能是选择器，或者是构建字符串\r\n\t\t\t\tselector = selector.trim();\r\n\t\t\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\t\t\tif(selector[0] === \"<\"){\r\n\t\t\t\t\treturn $(buildHTML(selector));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//如果不是，说明是选择器，直接选择\r\n\t\t\t\t\tvar doms = document.querySelectorAll(selector);\r\n\r\n\t\t\t\t\t//递归调用$，从新封装一次\r\n\t\t\t\t\treturn $(doms);\r\n\t\t\t\t}\r\n\t\t\t} else if(typeof selector == \"object\" && !isNaN(selector[\"length\"])){\r\n\t\t\t\t//类似数组就表示是数组。遍历数组或者是$.init对象，如果里面是dom元素封装返回\r\n\t\t\t\tfor(var i = 0,length = 0; i < selector.length; i++){\r\n\t\t\t\t\tvar dom = selector[i];\r\n\t\t\t\t\tif(dom && dom.nodeType == 1){\r\n\t\t\t\t\t\tthis[length] = dom;\r\n\t\t\t\t\t\tlength++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.length = length;\r\n\t\t\t\treturn this;\r\n\t\t\t} else if(selector.nodeType){\r\n\t\t\t\t//如果本身就是一个dom元素，直接封装返回\r\n\t\t\t\tthis.length = 1;\r\n\t\t\t\tthis[0] = selector;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//使init变为类数组对象\r\n\t\tlength : 0,\r\n\r\n\t\t//模仿each\r\n\t\teach : function (fn) {\r\n\t\t\tfor(var i =0; i < this.length; i++){\r\n\t\t\t\tif(typeof fn == 'function' && fn.call(this[i], i, this[i]) === false){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\teq: function(i){\r\n\t\t\treturn $(this[i]);\r\n\t\t},\r\n\r\n\t\t//往集合增加一个dom\r\n\t\tadd: function (item) {\r\n\t\t\tif(item && item.nodeType == 1){\r\n\t\t\t\tthis[this.length++] = item;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t//在某个节点下面找div\r\n\t\tfind: function(selector){\r\n\t\t\treturn access(this,null,function (dom, selector) {\r\n\t\t\t\treturn $(dom.querySelectorAll(selector));\r\n\t\t\t},selector)\r\n\t\t},\r\n\r\n\t\t//用于将文档增添于\r\n\t\tappend : function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tappendTo: function(parent){\r\n\t\t\t$(parent).append(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprepend: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.childNodes.length ?  parent.insertBefore(child, parent.childNodes[0]) : parent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprependTo: function(parent){\r\n\t\t\t$(parent).prepend(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tafter: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tif(parent.parentNode.lastChild == parent){\r\n\t\t\t\t\tparent.parentNode.appendChild(child);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.parentNode.insertBefore(child, parent.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertAfter: function(parent){\r\n\t\t\t$(parent).after(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tbefore: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.parentNode.insertBefore(child, parent);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertBefore: function(parent){\r\n\t\t\t$(parent).before(this);\r\n\t\t\treturn $(this[0]);\r\n\t\t},\r\n\t\t\r\n\t\tclone: function () {\r\n\t\t\tvar arr = [];\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\tarr.push(domClone(item, true));\r\n\t\t\t})\r\n\t\t\treturn $(arr);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 删除dom\r\n\t\t */\r\n\t\tremove: function () {\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\titem.parentElement && item.parentElement.removeChild(item)\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdata: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tif(!item[dataKey]){\r\n\t\t\t\t\titem[dataKey] = {};\r\n\t\t\t\t}\r\n\t\t\t\titem[dataKey][key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[dataKey] && item[dataKey][key];\r\n\t\t\t}, key, value);\r\n\t\t},\r\n\r\n\t\tattr: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.setAttribute(key, value)\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.getAttribute(key);\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\tremoveAttr: function (key) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(key) {\r\n\t\t\t\t\titem.removeAttr(key);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\taddClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.add(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tremoveClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.remove(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\thasClass: function (className) {\r\n\t\t\treturn this.length ? this[0].classList.contains(className) : false;\r\n\t\t},\r\n\r\n\t\ttoggleClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\tif(item.classList.contains(className)){\r\n\t\t\t\t\t\titem.classList.remove(className);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem.classList.add(className);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tprop: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem[key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[key];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\r\n\t\thtml: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tclearData(item.children || {length : 0});\r\n\t\t\t\titem.innerHTML = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.innerHTML;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\ttext: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.textContent = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.textContent;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\tval: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.value = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.value;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\thide: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(item.style.display){\r\n\t\t\t\t\t$(item).data(\"my-jquery-style-display\",item.style.display);\r\n\t\t\t\t}\r\n\t\t\t\titem.style.display=\"none\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tshow: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\titem.style.display= $(item).data(\"my-jquery-style-display\") || \"\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tcss: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.style[toCamelCase(key)] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.style[toCamelCase(key)];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\ton: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                if(typeof fn != 'function'){\r\n                \treturn;\r\n                }\r\n\r\n            \t//注册的函数\r\n            \tvar cacheFn = function (event) {\r\n\t\t\t\t\tif(fn.call(this, event) === false){\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t}\r\n                }\r\n                cacheFn.fn = fn;\r\n\r\n                //缓存该函数\r\n                var cacheEvent = $(item).data(\"my-jquery-event-cache\") || {};\r\n                cacheEvent[eventName] = cacheEvent[eventName] || [];\r\n                cacheEvent[eventName].push(cacheFn)\r\n\r\n                this.addEventListener(eventName, cacheFn, false);\r\n                $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n            })\r\n\t\t},\r\n\t\toff: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                var cacheEvent = $(this).data(\"my-jquery-event-cache\");\r\n\r\n                if(!cacheEvent)\r\n                \treturn;\r\n\r\n                var self = this;\r\n                if(cacheEvent[eventName] instanceof Array){\r\n                \tvar tempArr = [];\r\n                    cacheEvent[eventName].forEach(function (cacheFn) {\r\n                        if(typeof fn == 'function'){\r\n                        \tif( fn == cacheFn.fn){\r\n                                self.removeEventListener(eventName, cacheFn, false);\r\n                            } else {\r\n                                tempArr.push(cacheFn)\r\n                            }\r\n                        } else {\r\n                            self.removeEventListener(eventName, cacheFn, false);\r\n\t\t\t\t\t\t}\r\n                    })\r\n\r\n                    cacheEvent[eventName] = tempArr;\r\n                    $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n                }\r\n            })\r\n\r\n\t\t},\r\n\t\ttoggle: function(eventName){\r\n            return this.each(function (i, item) {\r\n            \tif(typeof this[eventName] == 'function'){\r\n                    this[eventName]();\r\n\t\t\t\t}\r\n            })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t$.fn.init.prototype = $.fn;\r\n\r\n\treturn $;\r\n})\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Created by njz on 16/11/29.\r\n */\n\n// 对动画的封装,支持requestAnimationFrame使用requestAnimationFrame封装。\n// 若览器不支持requestAnimationFrame情况下的回退，回退到使用setTmeout的情况。\nvar requestAnimationFrame, cancelAnimationFrame;\nvar lastTime = 0;\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\nrequestAnimationFrame = requestAnimationFrame || window.requestAnimationFrame || function (callback, element) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n    }, timeToCall);\n    lastTime = currTime + timeToCall;\n    return id;\n};\ncancelAnimationFrame = cancelAnimationFrame || window.cancelAnimationFrame || window.cancelRequestAnimationFrame || function (id) {\n    clearTimeout(id);\n};\n\nmodule.exports = {\n    /**\r\n     * 动画开始函数\r\n     * @param fn\r\n     * @returns {number}        动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return requestAnimationFrame(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        cancelAnimationFrame(animationId);\n    },\n    easeIn: function easeIn(t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n    },\n    /**\r\n     * 淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n        return -c / 2 * (--t * (t - 2) - 1) + b;\n    }\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar cacheData = __webpack_require__(15);\n\n/**\r\n * 因为perspectiveConversion是个纯函数,因此可以缓存,这样有利于减少计算,增加动画流畅度。尤其在移动端效果十分明显。\r\n * 计算工作由test/calcIntersectionCache完成,这里只是将其计算结果封装为一个函数\r\n */\nmodule.exports = function (y, radius, wheelHeight) {\n\n    //计算比例\n    var ratio = Math.round(y * 200 / wheelHeight);\n    ratio = Math.max(-100, ratio);\n    ratio = Math.min(100, ratio);\n    return y < 0 ? -1 * cacheData[Math.abs(ratio)] : cacheData[Math.abs(ratio)];\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = { \"0\": 0, \"1\": 0.006180474730027776, \"2\": 0.012361758667979887, \"3\": 0.01854466178595427, \"4\": 0.024729995586343003, \"5\": 0.030918573871856408, \"6\": 0.03711121352142655, \"7\": 0.043308735273995536, \"8\": 0.04951196452223301, \"9\": 0.05572173211827738, \"10\": 0.06193887519365582, \"11\": 0.06816423799561012, \"12\": 0.07439867274213974, \"13\": 0.08064304049816978, \"14\": 0.08689821207536214, \"15\": 0.0931650689582126, \"16\": 0.09944450425921704, \"17\": 0.1057374237060475, \"18\": 0.11204474666385271, \"19\": 0.11836740719599605, \"20\": 0.12470635516675682, \"21\": 0.13106255738976524, \"22\": 0.13743699882620672, \"23\": 0.1438306838371266, \"24\": 0.1502446374944947, \"25\": 0.15667990695605222, \"26\": 0.163137562909363, \"27\": 0.16961870109094018, \"28\": 0.1761244438868085, \"29\": 0.18265594202141244, \"30\": 0.189214376342388, \"31\": 0.1958009597093892, \"32\": 0.20241693899591295, \"33\": 0.20906359721390222, \"34\": 0.21574225577183714, \"35\": 0.2224542768780669, \"36\": 0.22920106610229693, \"37\": 0.23598407510944647, \"38\": 0.24280480458155373, \"39\": 0.24966480734504126, \"40\": 0.2565656917224997, \"41\": 0.26350912513022323, \"42\": 0.2704968379450743, \"43\": 0.27753062766690556, \"44\": 0.28461236340577195, \"45\": 0.2917439907265723, \"46\": 0.298927536887646, \"47\": 0.30616511651426775, \"48\": 0.3134589377530486, \"49\": 0.3208113089590395, \"50\": 0.32822464597399087, \"51\": 0.3357014800618854, \"52\": 0.3432444665767064, \"53\": 0.3508563944476478, \"54\": 0.35854019657886727, \"55\": 0.3662989612747276, \"56\": 0.37413594481766604, \"57\": 0.38205458534478537, \"58\": 0.39005851819157766, \"59\": 0.3981515928975172, \"60\": 0.4063378920994586, \"61\": 0.41462175257587425, \"62\": 0.42300778874928274, \"63\": 0.4315009190073606, \"64\": 0.4401063952672662, \"65\": 0.4488298362852176, \"66\": 0.45767726530766856, \"67\": 0.4666551527757603, \"68\": 0.47577046493656705, \"69\": 0.4850307193901132, \"70\": 0.4944440488195467, \"71\": 0.5040192744255141, \"72\": 0.5137659909310855, \"73\": 0.523694665462527, \"74\": 0.5338167531736872, \"75\": 0.5441448332086339, \"76\": 0.5546927695451231, \"77\": 0.5654759025098686, \"78\": 0.5765112784180985, \"79\": 0.5878179270265199, \"80\": 0.5994171995371129, \"81\": 0.6113331840998124, \"82\": 0.6235932216642447, \"83\": 0.6362285534378791, \"84\": 0.6492751433974548, \"85\": 0.6627747373240171, \"86\": 0.6767762470698537, \"87\": 0.6913375909489355, \"88\": 0.7065281883018284, \"89\": 0.7224324166263504, \"90\": 0.7391545276252866, \"91\": 0.7568258524516188, \"92\": 0.7756157498195769, \"93\": 0.7957489855645078, \"94\": 0.8175348626997212, \"95\": 0.8414195586288256, \"96\": 0.8680892494981647, \"97\": 0.8987014263951989, \"98\": 0.935517870959519, \"99\": 0.9843911534692572, \"100\": 1.1071487177940906 };\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dataURLtoU8arr = dataURLtoU8arr;\nfunction dataURLtoU8arr(dataurl) {\n  var arr = dataurl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return u8arr;\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"data:audio/mpeg;base64,SUQzAwAAAAACPVRBTEIAAAABAAAAVENPTgAAAAEAAABUSVQyAAAAAQAAAFRQRTEAAAABAAAAVFJDSwAAAAEAAABUWUVSAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAAEAAAGuQCPj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+urq6urq6urq6urq6urq6urq6urq6urq6u6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6/////////////////////////////////8AAAAeTEFNRTMuOTlyBJwAAAAALhMAADUgJANyQQABrgAABrkfUWHWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//vAxAAAA5gBQ3QAAArvJu6/M4BIhIKgoegEQ8/8DMz/Pgf+Yf8BwB+Z+b+ADgDw/8+o7VqAHMDBTAEFQenlPGADeAWECp4LYcVu9VS9CSRlFhkxw1oMkWM4jYWZOwux2kYYKQWsQ/2ZaUwdEtrLj/YqSyOwMh4qeJUr7XMoYikU+IQ0Fl0qjk87jLrdekgfWb+RhON84zDsakKgs3Zou0k5nT9ylE43Waiz7cwfWGpbM3rXMP1hzuFJScikNSFdLvQXPWYEqZ4yq3KaWd1zPOx//nn+cHSnUZqZYyWap5ZWy7/41ioa/pDolQNStZm24myAA0oAUsytJS4qVtLyfMrafUJqVaJSmQrtBIraqcZqrtu95KNI5Tb+dX71Vet2iXNymBj6gporC+5XVsSQTKC2K/35teC8/0KL/Ff/DEEyiT8rZKIyGuoyeRCzI7wpna5Q2KpYgzmMbLM2XlUCNv/oaWZSlouqkB3Zb7aW79MPu16Zr2jv1vKHhqqZmIaHhnb/SsKAAAAAnUXYNay0jZfhQ+kLcL/BQ6ZSJ0DwHKktA4gjBzi4QMDNC+5PGxEWWbh40wv+9jpbNzzEOEnImHyHThqblErKOHjUUkLlFjHeHR6Nq1opOiMmMmikPRZ/u/x0Cth2kTD7P+kpMxMPLuzvDuzxt5IyAAAAAT4RIEE6AqAAYh4w4CYYcQCEJbMcTOkDjlQ4CXbZKsEICzN+AkpphSMMLBX4hBMIAvInATJvUotAhWGpsGVGrKHEJUEr6wj7S4DFigYJAEKqhw1KjypsnuPCUiwz6RR9m+iRb5Fxo0DuEj06kR1A1DDs5jIKWtturEoLjFDV5jvHH8cef///1e28q4udUp5b876l8u22Gw9HwtDYAAAAAADQL1KAwBl18Zc1OLY7qQ/Dtb/YVtTHz+dBb4SUL6wf9iQ0E6aaWnOVk//Zl9dJdnet0b1//9sX76evxGZ3NZ//+zDE9oBKCIFfvPMACOsSai6eIAXrTEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+3DE9IAOXMFX+ZiAAoaaKj81kABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sQxPwACcCNT7mngAAAAD/DgAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVUQUcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/w==\"\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar em_1 = __webpack_require__(1);\nvar animationUtil_1 = __webpack_require__(4);\nvar constant_1 = __webpack_require__(2);\nvar AWheel_1 = __webpack_require__(5);\nvar tick = __webpack_require__(6)();\n\nvar Wheel = function (_AWheel_1$AWheel) {\n    _inherits(Wheel, _AWheel_1$AWheel);\n\n    function Wheel(picker, col, option, index) {\n        _classCallCheck(this, Wheel);\n\n        ///////////////////滚轮显示属性\n        //最大位移\n        var _this = _possibleConstructorReturn(this, (Wheel.__proto__ || Object.getPrototypeOf(Wheel)).call(this));\n\n        _this.maxDistance = 0;\n        //最小位移,设置可选项列表后需重新计算\n        _this.minDistance = 0;\n        //获取0.01em的实际像素值\n        _this.em = em_1.em;\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        _this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的位移,用于计算滚轮是否转动过\n        _this.originalDistance = 0;\n        //一次拖动过程中滚轮被转动的最大位移\n        _this.lastIndexDistance = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        _this.changeMaxDistance = 0;\n        //当前滚轮位移\n        _this.distance = 0;\n        //当前被选值的index\n        _this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        _this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        _this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        _this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        _this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        _this.isDraging = false;\n        ///////////////////主要属性\n        //picker对象\n        _this.picker = picker;\n        //option对象\n        _this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        _this.index = index;\n        //转轮主体\n        _this.dom = domUtil_1.default(\"<div class=\\\"picker-wheel\\\">\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n                <ul></ul>\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n            </div>\").css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        _this.contains = _this.dom.find('ul');\n        _this.setDistance(0);\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        _this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        _this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = _this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        _this.dom[0].addEventListener(\"touchstart\", startDrag);\n        _this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        _this.dom[0].addEventListener(\"touchmove\", drag);\n        _this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        _this.dom[0].addEventListener(\"touchend\", endDrag);\n        _this.dom[0].addEventListener(\"mouseup\", endDrag);\n        _this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //设置标签\n        _this.setSuffix(col.suffix);\n        _this.setPrefix(col.prefix);\n        _this.setOptions(col.options, null, true);\n        return _this;\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalDistance = this.distance;\n            this.changeMaxDistance = 0;\n            this.lastIndexDistance = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算位移变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeDistance = this.lastY - y;\n            var distance = changeDistance + this.distance;\n            //记录滚轮滚动的最大位移\n            this.changeMaxDistance = Math.max(Math.abs(this.originalDistance - distance), this.changeMaxDistance);\n            //记录当前位移\n            this.setDistance(distance);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeDistance) {\n                this.speed = changeDistance / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的Distance。之所以乘4是根据偏移效果经验得到的\n            var changeDistance = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var distance = changeDistance + this.distance;\n            //根据位移计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByDistance(distance);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小位移\n            this.maxDistance = constant_1.default.WHEEL_ITEM_HIGHT * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(位移)\n                var li = domUtil_1.default(\"<li></li>\").css('top', constant_1.default.WHEEL_ITEM_HIGHT / 100 * i + \"em\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var distance = constant_1.default.WHEEL_ITEM_HIGHT * -index;\n                //将标签的位移保存到其dom中\n                li.data(\"distance\", distance);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxDistance < 0.1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var distance = this.calcDistanceBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _Distance = animationUtil_1.default.easeOut(start, that.distance, distance - that.distance, during);\n                    if (Math.abs(_Distance - distance) < 1) {\n                        _Distance = distance;\n                    }\n                    that.setDistance(_Distance);\n                    if (_Distance != distance) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setDistance(distance);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定位移,自动设定标签的各个位置\r\n        * @param {number} distance\t\t要转到的位移\r\n        * @returns {number}\t\t\t修正后的位移,即最终的实际位移\r\n        */\n\n    }, {\n        key: \"setDistance\",\n        value: function setDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = this.rangeDistance(distance);\n            // 如果位移变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexDistance = this.lastIndexDistance;\n                var index = this.calcSelectedIndexByDistance(distance);\n                if (lastIndexDistance != index) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexDistance = index;\n            }\n            var translateValue = \"translate3d(0, \" + (constant_1.default.WHEEL_HEIGHT / 2 - constant_1.default.WHEEL_ITEM_HIGHT / 2 - distance) / 100 + \"em, 0)\";\n            this.contains.css(\"-webkit-transform\", translateValue).css(\"transform\", translateValue);\n            this.distance = distance;\n            return distance;\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByDistance\",\n        value: function calcSelectedIndexByDistance(distance) {\n            distance = this.rangeDistance(distance);\n            return Math.round(Math.abs(distance / constant_1.default.WHEEL_ITEM_HIGHT));\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param Distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcDistanceBySelectedIndex\",\n        value: function calcDistanceBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_HIGHT;\n        }\n        /**\r\n        * 限制位移超过极限值\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeDistance\",\n        value: function rangeDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = Math.max(this.minDistance, distance);\n            distance = Math.min(this.maxDistance, distance);\n            return distance;\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n    }]);\n\n    return Wheel;\n}(AWheel_1.AWheel);\n\nexports.Wheel = Wheel;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    /**\r\n     * 兼容es7的assign方法，这样可以省略polyfill\r\n     * @param {object} target\r\n     * @param {...object[]} source\r\n     * @returns {object}\r\n     */\n    assign: function assign(target) {\n        for (var _len = arguments.length, source = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            source[_key - 1] = arguments[_key];\n        }\n\n        // 第一个参数为空，则抛错\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert first argument to object');\n        }\n        var to = Object(target);\n        // 遍历剩余所有参数\n        for (var i = 1; i < arguments.length; i++) {\n            var nextSource = arguments[i];\n            // 参数为空，则跳过，继续下一个\n            if (nextSource === undefined || nextSource === null) {\n                continue;\n            }\n            nextSource = Object(nextSource);\n            // 获取改参数的所有key值，并遍历\n            var keysArray = Object.keys(nextSource);\n            for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                var nextKey = keysArray[nextIndex];\n                var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                // 如果不为空\b且可枚举，则直接浅拷贝赋值\n                if (desc !== undefined && desc.enumerable) {\n                    to[nextKey] = nextSource[nextKey];\n                }\n            }\n        }\n        return to;\n    }\n};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _domUtil = __webpack_require__(0);\n\nvar _domUtil2 = _interopRequireDefault(_domUtil);\n\nvar _em = __webpack_require__(1);\n\nvar _constant = __webpack_require__(2);\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nvar _browserUtil = __webpack_require__(3);\n\nvar _browserUtil2 = _interopRequireDefault(_browserUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// 阻止事件冒泡\nvar preventDefault = function preventDefault(e) {\n\te.preventDefault();\n};\n\n//构建主框架\nfunction Frame(picker, option) {\n\n\t//picker对象\n\tthis.picker = picker;\n\t//option\n\tthis.option = option;\n\n\t//构建cover\n\tthis.cover = (0, _domUtil2.default)(\"<div class='my-picker-cover' style='z-index: \" + option.zIndex + \"'>\").hide();\n\n\tthis.frame = (0, _domUtil2.default)('<div class=\"picker picker-frame\" style=\"z-index: ' + (option.zIndex + 1) + '\">' + '<header class=\"picker-head\">' + '<a class=\"picker-btn-cancel\"><span class=\"picker-header-text\"></span></a>' + '<h4 class=\"picker-title\"><span class=\"picker-header-text\"></span></h4>'\n\t// 未来显示多选时候使用\n\t+ '<span class=\"picker-selected\">已选0</span>' + '<a class=\"picker-btn-ok\"><span class=\"picker-header-text\"></span></a>' + '</header>' + '<div class=\"picker-body\">' + '<div class=\"picker-glass-over-border-top\">' + '</div>' + '<div class=\"picker-glass-over-border-bottom\">' + '</div>' + '</div>' + '</div>').css('height', (_constant2.default.WHEEL_HEIGHT + 15) / 100 + \"em\").hide();\n\n\t//如果是3d透视模式，增加3d透视的样式\n\tif (!_browserUtil2.default.isIE() && !(_browserUtil2.default.isAndroid() && _browserUtil2.default.androidVersion() < 4.4) && this.option.isPerspective) {\n\t\tthis.frame.addClass('s-3d').find(\".picker-body\").css(\"perspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"webkitPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"mozPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"msPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\");\n\t}\n\n\t// 修复显示模糊的问题，如果浏览器支持zoom，就s-zoom-body修复模糊的问题\n\tif (_browserUtil2.default.isWebKit() && document.body.style.zoom != undefined) {\n\t\tthis.frame.find(\".picker-body\").addClass('s-zoom-body');\n\t}\n\n\t// 如果是webkit内核，可以使用玻璃罩特性\n\tif (option.hasGlassCover == true) {\n\t\tthis.frame.addClass('s-glass-over');\n\t\tif (_browserUtil2.default.isWebKit()) {\n\t\t\tthis.frame.addClass('s-webkit-glass-over');\n\t\t}\n\t}\n\n\t//设置标题按钮名\n\tthis.frame.find(\".picker-title .picker-header-text\").text(option.title);\n\tthis.frame.find(\".picker-btn-cancel .picker-header-text\").text(option.buttons[1] || '取消');\n\tthis.frame.find(\".picker-btn-ok .picker-header-text\").text(option.buttons[0] || '确定');\n\n\t//阻止的滚轮和触摸事件冒泡，防止悲剧的滚动条在选择的时候改变\n\tthis.frame.find(\".picker-body\").on('touchstart', preventDefault);\n\tthis.frame.on('wheel', preventDefault);\n\tthis.cover.on('touchstart', preventDefault).on('wheel', preventDefault);\n\n\t(0, _domUtil2.default)(\"body\").append(this.frame).append(this.cover);\n\n\t//绑定主架的事件\n\tvar that = this;\n\tthis.frame.find(\".picker-btn-cancel\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onCancelClick == 'function') {\n\t\t\tthat.option.onCancelClick.call(that.picker);\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\tthis.frame.find(\".picker-btn-ok\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onOkClick == 'function') {\n\t\t\tvar result = that.option.onOkClick.call(that.picker, picker.getValue());\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\n\tthis._resizeHandle = function () {\n\t\tthis.frame.css('fontSize', (0, _em.em)() * 100 + 'px');\n\t}.bind(this);\n\n\twindow.addEventListener('resize', this._resizeHandle);\n\tthis._resizeHandle();\n}\n\nFrame.prototype = {\n\t//显示cover\n\tshowCover: function showCover() {\n\t\tvar _this = this;\n\n\t\tthis.cover.show();\n\t\tsetTimeout(function () {\n\t\t\t_this.cover.addClass('s-open');\n\t\t}, 0);\n\t},\n\t//隐藏cover\n\thideCover: function hideCover() {\n\t\tthis.cover.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.cover.hide();\n\t\t}, 200);\n\t},\n\t//显示frame\n\tshowFrame: function showFrame() {\n\t\tvar _this2 = this;\n\n\t\tthis.frame.show();\n\t\tsetTimeout(function () {\n\t\t\t_this2.frame.addClass('s-open');\n\t\t}, 0);\n\t},\n\t//显示frame\n\thideFrame: function hideFrame() {\n\t\tthis.frame.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.frame.hide();\n\t\t}, 200);\n\t},\n\tdom: function dom() {\n\t\treturn this.frame;\n\t},\n\tbody: function body() {\n\t\treturn this.frame.find('.picker-body');\n\t},\n\t//关闭\n\tclose: function close() {\n\t\tthis.remove();\n\t\twindow.removeEventListener('resize', this._resizeHandle);\n\t\tthis.frame.find(\".picker-body\").off('touchstart', preventDefault);\n\t\tthis.frame.off('wheel', preventDefault);\n\t\tthis.cover.off('touchstart', preventDefault).off('wheel', preventDefault);\n\t},\n\t//移除\n\tremove: function remove() {\n\t\tthis.frame.remove();\n\t}\n};\n\nmodule.exports = Frame;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=my-picker.js.map\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// my-picker.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0ee9463ca50fdb597033","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar myJquery = __webpack_require__(12);\nexports.default = myJquery(document);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * @file 获取0.01em的实际像素值\r\n */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction em() {\n    //根据屏幕的dpr判断em大小。如果dpr不是1，说明不是pc屏幕，此时选取window.innerWidth和window.innerHeight最小值的100分之一做1em。\n    //如果dpr是1，表示可能是pc屏幕，此时要求控件不能过大，所以去window.innerWidth、window.innerHeight、650当中的最小值的100分之一做1em\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n        return Math.min(window.innerWidth, window.innerHeight) / 100;\n    } else {\n        return Math.min(window.innerWidth, window.innerHeight, 400) / 100;\n    }\n}\nexports.em = em;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    //滚轮的高度\n    WHEEL_HEIGHT: 85,\n    //在3D透视滚轮中，每个可选项在滚轮上的角度\n    WHEEL_ITEM_ANGLE: 15,\n    //在非3D透视滚轮中，一个滚轮的一个刻度的高度，单位是0.01em\n    // WHEEL_ITEM_HIGHT : 85 - (85 * 41.6 * 2 / 100) ,\n    WHEEL_ITEM_HIGHT: 85 - 85 * 41.6 * 2 / 100,\n    //滚轮因惯性而发生的减速滑动时间\n    WHEEL_TRANSITION_TIME: 400\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _isIE = void 0;\nvar _androidVersion = void 0;\nvar userAgent = navigator.userAgent;\nexports.default = {\n    /**\r\n     * 是否是IE\r\n     * @returns\r\n     */\n    isIE: function isIE() {\n        if (_isIE == null) {\n            _isIE = function () {\n                var matches = void 0;\n                var tridentMap = {\n                    '4': 8,\n                    '5': 9,\n                    '6': 10,\n                    '7': 11\n                };\n                matches = userAgent.match(/MSIE (\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!+matches[1];\n                }\n                matches = userAgent.match(/Trident\\/(\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!tridentMap[matches[1]] || false;\n                }\n                //we did what we could\n                return false;\n            }();\n        }\n        return _isIE;\n    },\n\n    /**\r\n     * 是否是webkit\r\n     * @returns\r\n     */\n    isWebKit: function isWebKit() {\n        return userAgent.indexOf('AppleWebKit') > -1;\n    },\n\n    /**\r\n     * 是否是火狐\r\n     * @returns\r\n     */\n    isFirefox: function isFirefox() {\n        return userAgent.indexOf('Gecko') > -1 && userAgent.indexOf('KHTML') == -1;\n    },\n\n    /**\r\n     * 判断是否是本安卓\r\n     */\n    isAndroid: function isAndroid() {\n        return (/Android/i.test(userAgent)\n        );\n    },\n\n    /**\r\n     * 判断是否是老版本安卓（小于安卓4.4）\r\n     */\n    androidVersion: function androidVersion() {\n        if (!_androidVersion) {\n            var webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(userAgent);\n            var appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n            _androidVersion = function () {\n                // This matches Android Major.Minor.Patch versions\n                // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n                var match = userAgent.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n                if (!match) {\n                    return null;\n                }\n                var major = match[1] && parseFloat(match[1]);\n                var minor = match[2] && parseFloat(match[2]);\n                if (major && minor) {\n                    return parseFloat(match[1] + '.' + match[2]);\n                } else if (major) {\n                    return major;\n                }\n                return null;\n            }();\n        }\n        return _androidVersion;\n    }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar animationUtil = __webpack_require__(13);\nexports.default = {\n    /**\r\n     * 动画开始函数\r\n     * @param {()=>void} fn             东航的回调\r\n     * @returns {number}                动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return animationUtil.startAnimation(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param {number} animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        animationUtil.stopAnimation(animationId);\n    },\n    /**\r\n     * 渐入效果插值\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeIn: function easeIn(t, b, c, d) {\n        return animationUtil.easeIn(t, b, c, d);\n    },\n    /**\r\n     * 淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return animationUtil.easeOut(t, b, c, d);\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        return animationUtil.easeInOut(t, b, c, d);\n    }\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * @file 选择器滚轮类的接口\r\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar AWheel = function () {\n    function AWheel() {\n        _classCallCheck(this, AWheel);\n\n        ////////////////////可选项属性\n        //可选项列表\n        this.list = [];\n        //根据值生成的hashmap,主要是为了快速获得value对应可选项的index\n        this.valueHashMap = {};\n        ////////////////////事件\n        this.onSelectItemCallbackList = [];\n    }\n    /**\r\n    * 获得用户可选的标签\r\n    */\n\n\n    _createClass(AWheel, [{\n        key: \"getOptions\",\n        value: function getOptions() {\n            return this.list;\n        }\n        /**\r\n        * 给定指定标签的值,选择指定标签\r\n        */\n\n    }, {\n        key: \"selectOption\",\n        value: function selectOption(value) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            //如果valueHashMap里面没有value,表示没有这个标签,否则自动选中这个标签\n            if (this.valueHashMap[value] != null) {\n                var index = this.valueHashMap[value];\n                this.selectIndex(index, showAnimation);\n            }\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /**\r\n         * 注册SelectItem的回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"addSelectItemListener\",\n        value: function addSelectItemListener(fn) {\n            this.onSelectItemCallbackList.push(fn);\n        }\n        /**\r\n         * 移除注册的SelectItem回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"removeSelectItemListener\",\n        value: function removeSelectItemListener(fn) {\n            this.onSelectItemCallbackList = this.onSelectItemCallbackList.filter(function (_fn) {\n                return _fn !== fn;\n            });\n        }\n        ////////////////////////////DOM相关\n\n    }, {\n        key: \"getDOM\",\n        value: function getDOM() {\n            return this.dom;\n        }\n        /////////////////////////////wheel事件相关\n        /**\r\n        * 触发回调函数的接口\r\n        * @param index\t\t\t当前被选值的索引\r\n        * @param value\t\t\t当前被选值的值\r\n        */\n\n    }, {\n        key: \"toggleSelected\",\n        value: function toggleSelected(index, value) {\n            var _this = this;\n\n            this.onSelectItemCallbackList.forEach(function (fn) {\n                fn.call(_this, index, value);\n            });\n        }\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.onSelectItemCallbackList = null;\n        }\n    }]);\n\n    return AWheel;\n}();\n\nexports.AWheel = AWheel;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _domUtil = __webpack_require__(0);\n\nvar _domUtil2 = _interopRequireDefault(_domUtil);\n\nvar _browserUtil = __webpack_require__(3);\n\nvar _browserUtil2 = _interopRequireDefault(_browserUtil);\n\nvar _dataURLtoU8arr = __webpack_require__(16);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 滚轮滚动时候发声的函数,是一个单例模式\r\n */\nvar tick = __webpack_require__(17);\n\n\nfunction AudioImpl() {\n    var _this = this;\n\n    //#4，如果支持mse优先使用mse，这样解决base64禁止发音的问题\n    this.audio = (0, _domUtil2.default)('<audio></audio>')[0];\n\n    var MediaSource = window.MediaSource || window.WebkitMediaSource;\n    if (MediaSource && MediaSource.isTypeSupported('audio/mpeg')) {\n        var mediaSource = new MediaSource();\n        this.audio.src = URL.createObjectURL(mediaSource);\n        mediaSource.addEventListener('sourceopen', function (e) {\n            var sourceBuffer = mediaSource.addSourceBuffer('audio/mpeg');\n            sourceBuffer.addEventListener('updateend', function () {\n                mediaSource.endOfStream();\n            });\n            sourceBuffer.appendBuffer((0, _dataURLtoU8arr.dataURLtoU8arr)(tick));\n        });\n    } else {\n        this.audio.src = tick;\n    }\n    (0, _domUtil2.default)(this.audio).on('loadedmetadata', function () {\n        _this.audio.volume = 0.2;\n    });\n}\n\nAudioImpl.prototype.play = function () {\n    try {\n        if (this.audio) {\n            // #5 参考https://stackoverflow.com/questions/36803176/how-to-prevent-the-play-request-was-interrupted-by-a-call-to-pause-error\n            var isPlaying = this.audio.currentTime > 0 && !this.audio.paused && !this.audio.ended && this.audio.readyState > 2;\n\n            if (!isPlaying) {\n                this.audio.play();\n                if (_browserUtil2.default.isAndroid() && _browserUtil2.default.androidVersion() < 5) {\n                    this.audio = (0, _domUtil2.default)('<audio></audio>')[0];\n                    this.audio.src = tick;\n                }\n            }\n        }\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nvar audioImpl;\n\nmodule.exports = function () {\n    if (audioImpl) {\n        return audioImpl;\n    } else {\n        audioImpl = new AudioImpl();\n        return audioImpl;\n    }\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Picker_1 = __webpack_require__(8);\n__webpack_require__(21);\n__webpack_require__(22);\n__webpack_require__(23);\nmodule.exports = function (option) {\n    return new Picker_1.Picker(option);\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Col_1 = __webpack_require__(9);\nvar defaultOption_1 = __webpack_require__(10);\nvar Wheel3D_1 = __webpack_require__(11);\nvar Wheel_1 = __webpack_require__(18);\nvar browserUtil_1 = __webpack_require__(3);\nvar util_1 = __webpack_require__(19);\nvar Frame = __webpack_require__(20);\nvar version = \"v1.0.0\";\n\nvar Picker = function () {\n    function Picker(options) {\n        _classCallCheck(this, Picker);\n\n        //滚轮列表\n        this._wheels = [];\n        //主框架\n        this._cols = [];\n        this.version = version;\n        //用用户配置,覆盖默认配置,生成当前控件的实例的配置\n        this._option = util_1.default.assign({}, defaultOption_1.default, options);\n        //主架\n        this._frame = new Frame(this, this._option);\n        //解析cols属性,将其转换为Cols的数组\n        var cols = [],\n            i = 0;\n        if (Array.isArray(this._option.cols)) {\n            //如果cols为空数组,或者里面的元素是字符串,表示仅一个滚轮,就是cols本身\n            if (this._option.cols.length === 0 || typeof this._option.cols[0] === 'string') {\n                cols.push(new Col_1.Col(this._option.cols));\n            } else {\n                //否则表示数组中的每个元素都是个滚轮\n                for (i = 0; i < this._option.cols.length; i++) {\n                    cols.push(new Col_1.Col(this._option.cols[i]));\n                }\n            }\n        } else {\n            //如果不是数组,表示有cols是一个json形式配置的滚轮\n            cols.push(new Col_1.Col(this._option.cols));\n        }\n        this._cols = cols;\n        //构造滚轮\n        this._wheels = [];\n        var wheel, col;\n        for (var _i = 0; _i < cols.length; _i++) {\n            var _col = cols[_i];\n            //设置滚轮\n            wheel = !browserUtil_1.default.isIE() && !(browserUtil_1.default.isAndroid() && browserUtil_1.default.androidVersion() < 4.4) && this._option.isPerspective ? new Wheel3D_1.Wheel3D(this, _col, this._option, _i) : new Wheel_1.Wheel(this, _col, this._option, _i);\n            this._wheels.push(wheel);\n            this._frame.body().append(wheel.getDOM());\n            //重写wheel的onSelectItem事件\n            var that = this;\n            wheel.addSelectItemListener(function (i) {\n                return function (index, value) {\n                    //如果用户注册了onSelectItem\n                    if (typeof that._option.onSelectItem == 'function') {\n                        that._option.onSelectItem.call(that, i, index, value);\n                    }\n                };\n            }(_i));\n        }\n        for (var _i2 = 0; _i2 < cols.length; _i2++) {\n            //设置滚轮的选项\n            that.setValue(_i2, that._option.setValues[_i2]);\n        }\n        //是否可见\n        this._visible = false;\n    }\n    //是否可见\n\n\n    _createClass(Picker, [{\n        key: \"show\",\n\n        /**\r\n         * 显示\r\n         */\n        value: function show() {\n            this._frame.showCover();\n            this._frame.showFrame();\n            this._visible = true;\n        }\n        /**\r\n         * 隐藏\r\n         */\n\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this._frame.hideCover();\n            this._frame.hideFrame();\n            this._visible = false;\n        }\n        /**\r\n         * 关闭\r\n         */\n\n    }, {\n        key: \"close\",\n        value: function close() {\n            this._frame.close();\n            this._frame.hideCover();\n            this._option = null;\n            this._wheels.forEach(function (wheel) {\n                return wheel.destroy();\n            });\n            this._wheels = null;\n            this._frame = null;\n            this._cols = null;\n        }\n        /**\r\n         * 设置滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {any[]} list      滚轮的可选值列表\r\n         * @param {*} defaultValue  默认值,如果为空会以当前值作为默认值。如果没有当前值会以第一个值作为默认值\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(index, list, defaultValue) {\n            if (this._wheels[index]) this._wheels[index].setOptions(list, defaultValue);\n        }\n        /**\r\n         * 获取滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions(index) {\n            if (this._wheels[index]) {\n                return this._wheels[index].getOptions();\n            } else {\n                return null;\n            }\n        }\n        /**\r\n         * 设置滚轮的可选值\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {*} value         设置的值\r\n         */\n\n    }, {\n        key: \"setValue\",\n        value: function setValue(index, value) {\n            if (this._wheels[index]) this._wheels[index].selectOption(value);\n        }\n        /**\r\n         * 获取滚轮的值,如果index为空表示获取所有滚轮的值\r\n         * @param {number} index    滚轮的index,从0开始记录。如果为空表示获取所有滚轮的值\r\n         */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (index != null) {\n                if (this._wheels[index]) return this._wheels[index].getValue();\n            } else {\n                var values = [];\n                var i;\n                for (i = 0; i < this._cols.length; i++) {\n                    values.push(this._wheels[i].getValue());\n                }\n                return values;\n            }\n        }\n    }, {\n        key: \"visible\",\n        get: function get() {\n            return this._visible;\n        }\n    }]);\n\n    return Picker;\n}();\n\nexports.Picker = Picker;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * @file 将用户数据封装为列对象\r\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Col = function () {\n    function Col(colOption) {\n        _classCallCheck(this, Col);\n\n        this.prefix = \"\";\n        this.suffix = \"\";\n        this.labelKey = \"label\";\n        this.valueKey = \"value\";\n        //列的类型，0：未知 1：字符串数组 2：对象数组\n        this.type = 0;\n        //如果option是一个数组,视为仅存在options的情况\n        if (Array.isArray(colOption)) {\n            this.options = colOption;\n            this.type = 1;\n        } else {\n            this.options = colOption.options || [];\n            if (this.options.length > 0) {\n                if (typeof this.options[0] === 'string') {\n                    this.type = 1;\n                } else {\n                    this.type = 2;\n                }\n            } else {\n                this.type = 0;\n            }\n            this.prefix = colOption.prefix || \"\";\n            this.suffix = colOption.suffix || \"\";\n            this.labelKey = colOption['labelKey'] || this.labelKey;\n            this.valueKey = colOption['valueKey'] || this.valueKey;\n        }\n    }\n\n    _createClass(Col, [{\n        key: \"push\",\n        value: function push(item) {\n            this.options.push(item);\n        }\n    }, {\n        key: \"set\",\n        value: function set(index, item) {\n            if (this.type == 0) {\n                this.type = typeof item === 'string' ? 1 : 2;\n            }\n            this.options[index] = item;\n        }\n    }, {\n        key: \"setCol\",\n        value: function setCol() {}\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.valueKey];\n            }\n        }\n    }, {\n        key: \"getLabel\",\n        value: function getLabel(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.labelKey];\n            }\n        }\n    }]);\n\n    return Col;\n}();\n\nexports.Col = Col;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * 用户默认配置\r\n */\nvar defaultOptions = {\n    cols: [[]],\n    setValues: [],\n    onSelectItem: null,\n    onOkClick: null,\n    onCancelClick: null,\n    fontSize: 15,\n    isPerspective: true,\n    hasGlassCover: true,\n    hasVoice: true,\n    title: '',\n    buttons: [\"确定\", \"取消\"],\n    zIndex: 100\n};\nexports.default = defaultOptions;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar em_1 = __webpack_require__(1);\nvar animationUtil_1 = __webpack_require__(4);\nvar constant_1 = __webpack_require__(2);\nvar AWheel_1 = __webpack_require__(5);\nvar perspectiveConversion = __webpack_require__(14);\nvar tick = __webpack_require__(6)();\n\nvar Wheel3D = function (_AWheel_1$AWheel) {\n    _inherits(Wheel3D, _AWheel_1$AWheel);\n\n    function Wheel3D(picker, col, option, index) {\n        _classCallCheck(this, Wheel3D);\n\n        ///////////////////滚轮显示属性\n        //最大转角\n        var _this = _possibleConstructorReturn(this, (Wheel3D.__proto__ || Object.getPrototypeOf(Wheel3D)).call(this));\n\n        _this.maxAngle = 0;\n        //最小转角,设置可选项列表后需重新计算\n        _this.minAngle = 0;\n        //滚轮的实际半径,因为有透视效果,所以滚轮实际半径比容器的高度的一半还小。根据勾股定理,计算得实际半径是容器高度的根号5分之1\n        _this.radius = constant_1.default.WHEEL_HEIGHT / Math.sqrt(5);\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        _this.visibleAngle = 0;\n        //获取0.01em的实际像素值\n        _this.em = em_1.em;\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        _this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的转角,用于计算滚轮是否转动过\n        _this.originalAngle = 0;\n        //一次拖动过程中滚轮被转动的最大角度\n        _this.lastIndexAngle = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        _this.changeMaxAngle = 0;\n        //当前滚轮转角\n        _this.angle = 0;\n        //当前被选值的index\n        _this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        _this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        _this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        _this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        _this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        _this.isDraging = false;\n        ///////////////////主要属性\n        //picker对象\n        _this.picker = picker;\n        //option对象\n        _this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        _this.index = index;\n        //转轮主体\n        _this.dom = domUtil_1.default('<div class=\"picker-wheel3d\">' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '<ul></ul>' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '</div>').css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        _this.contains = _this.dom.find('ul');\n        ///////////////////滚轮显示属性\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        _this.visibleAngle = 90 - Math.acos(_this.radius / constant_1.default.WHEEL_HEIGHT * 2) / Math.PI * 180;\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        _this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        _this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = _this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        _this.dom[0].addEventListener(\"touchstart\", startDrag);\n        _this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        _this.dom[0].addEventListener(\"touchmove\", drag);\n        _this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        _this.dom[0].addEventListener(\"touchend\", endDrag);\n        _this.dom[0].addEventListener(\"mouseup\", endDrag);\n        _this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //初始化标签\n        var transformValue = \"translateZ(\" + _this.radius / 100 + \"em) scale(0.75)\";\n        _this.dom.find(\".picker-label\").css(\"-webkit-transform\", transformValue).css(\"transform\", transformValue);\n        //设置标签\n        _this.setSuffix(col.suffix);\n        _this.setPrefix(col.prefix);\n        _this.setOptions(col.options, null, true);\n        return _this;\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel3D, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalAngle = this.angle;\n            this.changeMaxAngle = 0;\n            this.lastIndexAngle = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算转角变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeAngle = (perspectiveConversion(this.lastY, this.radius, constant_1.default.WHEEL_HEIGHT) - perspectiveConversion(y, this.radius, constant_1.default.WHEEL_HEIGHT)) / Math.PI * 180;\n            var angle = changeAngle + this.angle;\n            //记录滚轮滚动的最大转角\n            this.changeMaxAngle = Math.max(Math.abs(this.originalAngle - angle), this.changeMaxAngle);\n            //记录当前角度\n            this.setAngle(angle);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeAngle) {\n                this.speed = changeAngle / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的angle。之所以乘4是根据偏移效果经验得到的\n            var changeAngle = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var angle = changeAngle + this.angle;\n            //根据角度计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByAngle(angle);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小转角\n            this.maxAngle = constant_1.default.WHEEL_ITEM_ANGLE * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label,\n\n            //显示标签的dom的高度,要求根据wheelItemAngle计算,使各个标签dom的边缘刚好挨在一起,确保没有空细\n            height = this.radius * Math.PI * constant_1.default.WHEEL_ITEM_ANGLE / 180;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(角度)\n                var li = domUtil_1.default(\"<li></li>\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var angle = constant_1.default.WHEEL_ITEM_ANGLE * -index;\n                //为了解决3d放大后，文字模糊的问题，故采用zoom=2的方案，所以li的尺寸方面，统一缩小一半\n                var transformValue = \"rotateX(\" + angle + \"deg) translateZ(\" + that.radius / 100 + \"em) scale(0.75)\";\n                li.css(\"-webkit-transform\", transformValue).css(\"transform\", transformValue).css(\"padding\", height / 5.9 / 100 + \"em 0\").css(\"height\", height / 100 + \"em\").css(\"line-height\", height / 100 + \"em\");\n                //将标签的角度保存到其dom中\n                li.data(\"angle\", angle);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxAngle < 1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            //刷新标签\n            this.flushLabel();\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var angle = this.calcAngleBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _angle = animationUtil_1.default.easeOut(start, that.angle, angle - that.angle, during);\n                    if (Math.abs(_angle - angle) < 1) {\n                        _angle = angle;\n                    }\n                    that.setAngle(_angle);\n                    if (_angle != angle) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setAngle(angle);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定角度,自动设定标签的各个位置\r\n        * @param {number} angle\t\t要转到的角度\r\n        * @returns {number}\t\t\t修正后的角度,即最终的实际角度\r\n        */\n\n    }, {\n        key: \"setAngle\",\n        value: function setAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = this.rangeAngle(angle);\n            // 如果角度变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexAngle = this.lastIndexAngle;\n                var index = this.calcSelectedIndexByAngle(angle);\n                if (lastIndexAngle != index) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexAngle = index;\n            }\n            this.contains.css(\"-webkit-transform\", \"rotateX(\" + angle + \"deg)\").css(\"transform\", \"rotateX(\" + angle + \"deg)\");\n            this.angle = angle;\n            this.flushLabel();\n            return angle;\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByAngle\",\n        value: function calcSelectedIndexByAngle(angle) {\n            angle = this.rangeAngle(angle);\n            return Math.round(Math.abs(angle / constant_1.default.WHEEL_ITEM_ANGLE));\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcAngleBySelectedIndex\",\n        value: function calcAngleBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_ANGLE;\n        }\n        /**\r\n        * 限制转角超过极限值\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeAngle\",\n        value: function rangeAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = Math.max(this.minAngle, angle);\n            angle = Math.min(this.maxAngle, angle);\n            return angle;\n        }\n        /**\r\n        * 刷新各个标签的状态,确定应该显示哪些标签\r\n        */\n\n    }, {\n        key: \"flushLabel\",\n        value: function flushLabel() {\n            var that = this;\n            this.dom.find(\"li\").each(function (index, li) {\n                li = domUtil_1.default(li);\n                var angle = li.data(\"angle\") + that.angle;\n                if (angle > that.visibleAngle || angle < -that.visibleAngle) {\n                    if (li.css(\"display\") != \"none\") {\n                        li.css(\"display\", \"none\");\n                    }\n                } else {\n                    if (li.css(\"display\") != \"block\") {\n                        li.css(\"display\", \"block\");\n                    }\n                }\n            });\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n    }]);\n\n    return Wheel3D;\n}(AWheel_1.AWheel);\n\nexports.Wheel3D = Wheel3D;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n(function (global, factory) {\r\n\t\"use strict\"\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\tmodule.exports = factory;\r\n\t} else {\r\n\t\tglobal.$ = factory(global.document);\r\n\t}\r\n})(typeof window !== \"undefined\" ? window : this, function (document) {\r\n\r\n\t//用于插入使用的DocumentFragment\r\n\tvar fragment = document.createDocumentFragment();\r\n\r\n\t//将html解析为my-jquery对象\r\n\tfunction buildHTML(selector) {\r\n\t\tselector = selector.trim();\r\n\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\tif(selector[0] === \"<\"){\r\n\t\t\t//用于使用innerHTML生成dom的div\r\n\t\t\tvar div = document.createElement(\"DIV\");\r\n\t\t\tdiv.innerHTML = selector;\r\n\t\t\treturn $(div.children);\r\n\t\t} else {\r\n\t\t\treturn $([]);\r\n\t\t}\r\n\t}\r\n\r\n\t//将html解析为fragment对象\r\n\tfunction buildFragment(dom) {\r\n\t\tvar dom = $(dom);\r\n\t\tfragment.textContent = \"\";\r\n\t\tdom.each(function (i, item) {\r\n\t\t\tfragment.appendChild(item);\r\n\t\t})\r\n\t\treturn fragment;\r\n\t}\r\n\r\n\t//将各种要插入对象做成一个buildFragment,根据fn插入\r\n\tfunction insertDom(targets, dom, fn) {\r\n\t\t//如果插入到的元素是多个,克隆之后再插入\r\n\t\ttargets.each(function (i, item) {\r\n\t\t\tif(i != targets.length-1){\r\n\t\t\t\tfn(this, buildFragment(dom.clone()));\r\n\t\t\t} else {\r\n\t\t\t\tfn(this, buildFragment(dom));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//一个模板,用于生成setter和getter重载函数\r\n\tfunction access(myjq, setter, getter, key, value) {\r\n\t\t//是否是setter方法,如果是setter方法,value不能是undefined\r\n\t\treturn value === undefined ? (myjq.length ? getter(myjq[0], key) : undefined) : myjq.each(function (index, item) {\r\n\t\t\treturn setter(item, key, value)\r\n\t\t})\r\n\t}\r\n\r\n    //短横线隔开式命名转驼峰命名\r\n    function toCamelCase(name) {\r\n        return name.replace(/-\\S/g, function (splitChar) {\r\n            return splitChar[1].toUpperCase();\r\n        });\r\n    }\r\n\r\n    //克隆dom\r\n\tfunction domClone(item, hasSystem) {\r\n\t\tvar dom = item.cloneNode(true);\r\n\t\thasSystem && item[dataKey] && (dom[dataKey] = item[dataKey]);\r\n\r\n\t\treturn dom;\r\n\t}\r\n\r\n\t//删除dom时候使用\r\n\tfunction clearData(item) {\r\n\t\tvar arr;\r\n\t\tif(item.nodeType == 1){\r\n\t\t\tdelete item[dataKey];\r\n\t\t\tarr = item.children;\r\n\t\t} else if(item && item.length != null){\r\n\t\t\tarr = item;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor(var i; i < arr.length; i++){\r\n\t\t\tclearData(arr[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t//防止冲突的id\r\n\tvar $$mjid = (\"\" + Date.now() +  Math.random()).replace('.', '');\r\n\t//dom缓存的key\r\n\tvar dataKey = \"$$mjid\" + $$mjid\r\n\r\n\tvar $ = function(selector){\r\n\t\treturn new $.fn.init(selector);\r\n\t}\r\n\r\n\t$.fn = $.prototype = {\r\n\t\t//唯一id\r\n\t\t$$mjid : $$mjid,\r\n\r\n\t\t//jquery对象原型\r\n\t\tinit : function(selector){\r\n\r\n\t\t\t//如果没有选择器，直接返回\r\n\t\t\tif(!selector){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof selector == \"string\"){\r\n\t\t\t\t//如果是字符串，表示可能是选择器，或者是构建字符串\r\n\t\t\t\tselector = selector.trim();\r\n\t\t\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\t\t\tif(selector[0] === \"<\"){\r\n\t\t\t\t\treturn $(buildHTML(selector));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//如果不是，说明是选择器，直接选择\r\n\t\t\t\t\tvar doms = document.querySelectorAll(selector);\r\n\r\n\t\t\t\t\t//递归调用$，从新封装一次\r\n\t\t\t\t\treturn $(doms);\r\n\t\t\t\t}\r\n\t\t\t} else if(typeof selector == \"object\" && !isNaN(selector[\"length\"])){\r\n\t\t\t\t//类似数组就表示是数组。遍历数组或者是$.init对象，如果里面是dom元素封装返回\r\n\t\t\t\tfor(var i = 0,length = 0; i < selector.length; i++){\r\n\t\t\t\t\tvar dom = selector[i];\r\n\t\t\t\t\tif(dom && dom.nodeType == 1){\r\n\t\t\t\t\t\tthis[length] = dom;\r\n\t\t\t\t\t\tlength++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.length = length;\r\n\t\t\t\treturn this;\r\n\t\t\t} else if(selector.nodeType){\r\n\t\t\t\t//如果本身就是一个dom元素，直接封装返回\r\n\t\t\t\tthis.length = 1;\r\n\t\t\t\tthis[0] = selector;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//使init变为类数组对象\r\n\t\tlength : 0,\r\n\r\n\t\t//模仿each\r\n\t\teach : function (fn) {\r\n\t\t\tfor(var i =0; i < this.length; i++){\r\n\t\t\t\tif(typeof fn == 'function' && fn.call(this[i], i, this[i]) === false){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\teq: function(i){\r\n\t\t\treturn $(this[i]);\r\n\t\t},\r\n\r\n\t\t//往集合增加一个dom\r\n\t\tadd: function (item) {\r\n\t\t\tif(item && item.nodeType == 1){\r\n\t\t\t\tthis[this.length++] = item;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t//在某个节点下面找div\r\n\t\tfind: function(selector){\r\n\t\t\treturn access(this,null,function (dom, selector) {\r\n\t\t\t\treturn $(dom.querySelectorAll(selector));\r\n\t\t\t},selector)\r\n\t\t},\r\n\r\n\t\t//用于将文档增添于\r\n\t\tappend : function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tappendTo: function(parent){\r\n\t\t\t$(parent).append(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprepend: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.childNodes.length ?  parent.insertBefore(child, parent.childNodes[0]) : parent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprependTo: function(parent){\r\n\t\t\t$(parent).prepend(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tafter: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tif(parent.parentNode.lastChild == parent){\r\n\t\t\t\t\tparent.parentNode.appendChild(child);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.parentNode.insertBefore(child, parent.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertAfter: function(parent){\r\n\t\t\t$(parent).after(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tbefore: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.parentNode.insertBefore(child, parent);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertBefore: function(parent){\r\n\t\t\t$(parent).before(this);\r\n\t\t\treturn $(this[0]);\r\n\t\t},\r\n\t\t\r\n\t\tclone: function () {\r\n\t\t\tvar arr = [];\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\tarr.push(domClone(item, true));\r\n\t\t\t})\r\n\t\t\treturn $(arr);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 删除dom\r\n\t\t */\r\n\t\tremove: function () {\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\titem.parentElement && item.parentElement.removeChild(item)\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdata: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tif(!item[dataKey]){\r\n\t\t\t\t\titem[dataKey] = {};\r\n\t\t\t\t}\r\n\t\t\t\titem[dataKey][key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[dataKey] && item[dataKey][key];\r\n\t\t\t}, key, value);\r\n\t\t},\r\n\r\n\t\tattr: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.setAttribute(key, value)\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.getAttribute(key);\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\tremoveAttr: function (key) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(key) {\r\n\t\t\t\t\titem.removeAttr(key);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\taddClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.add(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tremoveClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.remove(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\thasClass: function (className) {\r\n\t\t\treturn this.length ? this[0].classList.contains(className) : false;\r\n\t\t},\r\n\r\n\t\ttoggleClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\tif(item.classList.contains(className)){\r\n\t\t\t\t\t\titem.classList.remove(className);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem.classList.add(className);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tprop: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem[key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[key];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\r\n\t\thtml: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tclearData(item.children || {length : 0});\r\n\t\t\t\titem.innerHTML = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.innerHTML;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\ttext: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.textContent = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.textContent;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\tval: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.value = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.value;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\thide: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(item.style.display){\r\n\t\t\t\t\t$(item).data(\"my-jquery-style-display\",item.style.display);\r\n\t\t\t\t}\r\n\t\t\t\titem.style.display=\"none\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tshow: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\titem.style.display= $(item).data(\"my-jquery-style-display\") || \"\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tcss: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.style[toCamelCase(key)] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.style[toCamelCase(key)];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\ton: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                if(typeof fn != 'function'){\r\n                \treturn;\r\n                }\r\n\r\n            \t//注册的函数\r\n            \tvar cacheFn = function (event) {\r\n\t\t\t\t\tif(fn.call(this, event) === false){\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t}\r\n                }\r\n                cacheFn.fn = fn;\r\n\r\n                //缓存该函数\r\n                var cacheEvent = $(item).data(\"my-jquery-event-cache\") || {};\r\n                cacheEvent[eventName] = cacheEvent[eventName] || [];\r\n                cacheEvent[eventName].push(cacheFn)\r\n\r\n                this.addEventListener(eventName, cacheFn, false);\r\n                $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n            })\r\n\t\t},\r\n\t\toff: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                var cacheEvent = $(this).data(\"my-jquery-event-cache\");\r\n\r\n                if(!cacheEvent)\r\n                \treturn;\r\n\r\n                var self = this;\r\n                if(cacheEvent[eventName] instanceof Array){\r\n                \tvar tempArr = [];\r\n                    cacheEvent[eventName].forEach(function (cacheFn) {\r\n                        if(typeof fn == 'function'){\r\n                        \tif( fn == cacheFn.fn){\r\n                                self.removeEventListener(eventName, cacheFn, false);\r\n                            } else {\r\n                                tempArr.push(cacheFn)\r\n                            }\r\n                        } else {\r\n                            self.removeEventListener(eventName, cacheFn, false);\r\n\t\t\t\t\t\t}\r\n                    })\r\n\r\n                    cacheEvent[eventName] = tempArr;\r\n                    $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n                }\r\n            })\r\n\r\n\t\t},\r\n\t\ttoggle: function(eventName){\r\n            return this.each(function (i, item) {\r\n            \tif(typeof this[eventName] == 'function'){\r\n                    this[eventName]();\r\n\t\t\t\t}\r\n            })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t$.fn.init.prototype = $.fn;\r\n\r\n\treturn $;\r\n})\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Created by njz on 16/11/29.\r\n */\n\n// 对动画的封装,支持requestAnimationFrame使用requestAnimationFrame封装。\n// 若览器不支持requestAnimationFrame情况下的回退，回退到使用setTmeout的情况。\nvar requestAnimationFrame, cancelAnimationFrame;\nvar lastTime = 0;\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\nrequestAnimationFrame = requestAnimationFrame || window.requestAnimationFrame || function (callback, element) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n    }, timeToCall);\n    lastTime = currTime + timeToCall;\n    return id;\n};\ncancelAnimationFrame = cancelAnimationFrame || window.cancelAnimationFrame || window.cancelRequestAnimationFrame || function (id) {\n    clearTimeout(id);\n};\n\nmodule.exports = {\n    /**\r\n     * 动画开始函数\r\n     * @param fn\r\n     * @returns {number}        动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return requestAnimationFrame(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        cancelAnimationFrame(animationId);\n    },\n    easeIn: function easeIn(t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n    },\n    /**\r\n     * 淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n        return -c / 2 * (--t * (t - 2) - 1) + b;\n    }\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar cacheData = __webpack_require__(15);\n\n/**\r\n * 因为perspectiveConversion是个纯函数,因此可以缓存,这样有利于减少计算,增加动画流畅度。尤其在移动端效果十分明显。\r\n * 计算工作由test/calcIntersectionCache完成,这里只是将其计算结果封装为一个函数\r\n */\nmodule.exports = function (y, radius, wheelHeight) {\n\n    //计算比例\n    var ratio = Math.round(y * 200 / wheelHeight);\n    ratio = Math.max(-100, ratio);\n    ratio = Math.min(100, ratio);\n    return y < 0 ? -1 * cacheData[Math.abs(ratio)] : cacheData[Math.abs(ratio)];\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = { \"0\": 0, \"1\": 0.006180474730027776, \"2\": 0.012361758667979887, \"3\": 0.01854466178595427, \"4\": 0.024729995586343003, \"5\": 0.030918573871856408, \"6\": 0.03711121352142655, \"7\": 0.043308735273995536, \"8\": 0.04951196452223301, \"9\": 0.05572173211827738, \"10\": 0.06193887519365582, \"11\": 0.06816423799561012, \"12\": 0.07439867274213974, \"13\": 0.08064304049816978, \"14\": 0.08689821207536214, \"15\": 0.0931650689582126, \"16\": 0.09944450425921704, \"17\": 0.1057374237060475, \"18\": 0.11204474666385271, \"19\": 0.11836740719599605, \"20\": 0.12470635516675682, \"21\": 0.13106255738976524, \"22\": 0.13743699882620672, \"23\": 0.1438306838371266, \"24\": 0.1502446374944947, \"25\": 0.15667990695605222, \"26\": 0.163137562909363, \"27\": 0.16961870109094018, \"28\": 0.1761244438868085, \"29\": 0.18265594202141244, \"30\": 0.189214376342388, \"31\": 0.1958009597093892, \"32\": 0.20241693899591295, \"33\": 0.20906359721390222, \"34\": 0.21574225577183714, \"35\": 0.2224542768780669, \"36\": 0.22920106610229693, \"37\": 0.23598407510944647, \"38\": 0.24280480458155373, \"39\": 0.24966480734504126, \"40\": 0.2565656917224997, \"41\": 0.26350912513022323, \"42\": 0.2704968379450743, \"43\": 0.27753062766690556, \"44\": 0.28461236340577195, \"45\": 0.2917439907265723, \"46\": 0.298927536887646, \"47\": 0.30616511651426775, \"48\": 0.3134589377530486, \"49\": 0.3208113089590395, \"50\": 0.32822464597399087, \"51\": 0.3357014800618854, \"52\": 0.3432444665767064, \"53\": 0.3508563944476478, \"54\": 0.35854019657886727, \"55\": 0.3662989612747276, \"56\": 0.37413594481766604, \"57\": 0.38205458534478537, \"58\": 0.39005851819157766, \"59\": 0.3981515928975172, \"60\": 0.4063378920994586, \"61\": 0.41462175257587425, \"62\": 0.42300778874928274, \"63\": 0.4315009190073606, \"64\": 0.4401063952672662, \"65\": 0.4488298362852176, \"66\": 0.45767726530766856, \"67\": 0.4666551527757603, \"68\": 0.47577046493656705, \"69\": 0.4850307193901132, \"70\": 0.4944440488195467, \"71\": 0.5040192744255141, \"72\": 0.5137659909310855, \"73\": 0.523694665462527, \"74\": 0.5338167531736872, \"75\": 0.5441448332086339, \"76\": 0.5546927695451231, \"77\": 0.5654759025098686, \"78\": 0.5765112784180985, \"79\": 0.5878179270265199, \"80\": 0.5994171995371129, \"81\": 0.6113331840998124, \"82\": 0.6235932216642447, \"83\": 0.6362285534378791, \"84\": 0.6492751433974548, \"85\": 0.6627747373240171, \"86\": 0.6767762470698537, \"87\": 0.6913375909489355, \"88\": 0.7065281883018284, \"89\": 0.7224324166263504, \"90\": 0.7391545276252866, \"91\": 0.7568258524516188, \"92\": 0.7756157498195769, \"93\": 0.7957489855645078, \"94\": 0.8175348626997212, \"95\": 0.8414195586288256, \"96\": 0.8680892494981647, \"97\": 0.8987014263951989, \"98\": 0.935517870959519, \"99\": 0.9843911534692572, \"100\": 1.1071487177940906 };\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dataURLtoU8arr = dataURLtoU8arr;\nfunction dataURLtoU8arr(dataurl) {\n  var arr = dataurl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return u8arr;\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"data:audio/mpeg;base64,SUQzAwAAAAACPVRBTEIAAAABAAAAVENPTgAAAAEAAABUSVQyAAAAAQAAAFRQRTEAAAABAAAAVFJDSwAAAAEAAABUWUVSAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAAEAAAGuQCPj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+urq6urq6urq6urq6urq6urq6urq6urq6u6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6/////////////////////////////////8AAAAeTEFNRTMuOTlyBJwAAAAALhMAADUgJANyQQABrgAABrkfUWHWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//vAxAAAA5gBQ3QAAArvJu6/M4BIhIKgoegEQ8/8DMz/Pgf+Yf8BwB+Z+b+ADgDw/8+o7VqAHMDBTAEFQenlPGADeAWECp4LYcVu9VS9CSRlFhkxw1oMkWM4jYWZOwux2kYYKQWsQ/2ZaUwdEtrLj/YqSyOwMh4qeJUr7XMoYikU+IQ0Fl0qjk87jLrdekgfWb+RhON84zDsakKgs3Zou0k5nT9ylE43Waiz7cwfWGpbM3rXMP1hzuFJScikNSFdLvQXPWYEqZ4yq3KaWd1zPOx//nn+cHSnUZqZYyWap5ZWy7/41ioa/pDolQNStZm24myAA0oAUsytJS4qVtLyfMrafUJqVaJSmQrtBIraqcZqrtu95KNI5Tb+dX71Vet2iXNymBj6gporC+5XVsSQTKC2K/35teC8/0KL/Ff/DEEyiT8rZKIyGuoyeRCzI7wpna5Q2KpYgzmMbLM2XlUCNv/oaWZSlouqkB3Zb7aW79MPu16Zr2jv1vKHhqqZmIaHhnb/SsKAAAAAnUXYNay0jZfhQ+kLcL/BQ6ZSJ0DwHKktA4gjBzi4QMDNC+5PGxEWWbh40wv+9jpbNzzEOEnImHyHThqblErKOHjUUkLlFjHeHR6Nq1opOiMmMmikPRZ/u/x0Cth2kTD7P+kpMxMPLuzvDuzxt5IyAAAAAT4RIEE6AqAAYh4w4CYYcQCEJbMcTOkDjlQ4CXbZKsEICzN+AkpphSMMLBX4hBMIAvInATJvUotAhWGpsGVGrKHEJUEr6wj7S4DFigYJAEKqhw1KjypsnuPCUiwz6RR9m+iRb5Fxo0DuEj06kR1A1DDs5jIKWtturEoLjFDV5jvHH8cef///1e28q4udUp5b876l8u22Gw9HwtDYAAAAAADQL1KAwBl18Zc1OLY7qQ/Dtb/YVtTHz+dBb4SUL6wf9iQ0E6aaWnOVk//Zl9dJdnet0b1//9sX76evxGZ3NZ//+zDE9oBKCIFfvPMACOsSai6eIAXrTEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+3DE9IAOXMFX+ZiAAoaaKj81kABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sQxPwACcCNT7mngAAAAD/DgAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVUQUcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/w==\"\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar em_1 = __webpack_require__(1);\nvar animationUtil_1 = __webpack_require__(4);\nvar constant_1 = __webpack_require__(2);\nvar AWheel_1 = __webpack_require__(5);\nvar tick = __webpack_require__(6)();\n\nvar Wheel = function (_AWheel_1$AWheel) {\n    _inherits(Wheel, _AWheel_1$AWheel);\n\n    function Wheel(picker, col, option, index) {\n        _classCallCheck(this, Wheel);\n\n        ///////////////////滚轮显示属性\n        //最大位移\n        var _this = _possibleConstructorReturn(this, (Wheel.__proto__ || Object.getPrototypeOf(Wheel)).call(this));\n\n        _this.maxDistance = 0;\n        //最小位移,设置可选项列表后需重新计算\n        _this.minDistance = 0;\n        //获取0.01em的实际像素值\n        _this.em = em_1.em;\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        _this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的位移,用于计算滚轮是否转动过\n        _this.originalDistance = 0;\n        //一次拖动过程中滚轮被转动的最大位移\n        _this.lastIndexDistance = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        _this.changeMaxDistance = 0;\n        //当前滚轮位移\n        _this.distance = 0;\n        //当前被选值的index\n        _this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        _this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        _this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        _this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        _this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        _this.isDraging = false;\n        ///////////////////主要属性\n        //picker对象\n        _this.picker = picker;\n        //option对象\n        _this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        _this.index = index;\n        //转轮主体\n        _this.dom = domUtil_1.default(\"<div class=\\\"picker-wheel\\\">\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n                <ul></ul>\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n            </div>\").css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        _this.contains = _this.dom.find('ul');\n        _this.setDistance(0);\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        _this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        _this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = _this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        _this.dom[0].addEventListener(\"touchstart\", startDrag);\n        _this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        _this.dom[0].addEventListener(\"touchmove\", drag);\n        _this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        _this.dom[0].addEventListener(\"touchend\", endDrag);\n        _this.dom[0].addEventListener(\"mouseup\", endDrag);\n        _this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //设置标签\n        _this.setSuffix(col.suffix);\n        _this.setPrefix(col.prefix);\n        _this.setOptions(col.options, null, true);\n        return _this;\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalDistance = this.distance;\n            this.changeMaxDistance = 0;\n            this.lastIndexDistance = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算位移变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeDistance = this.lastY - y;\n            var distance = changeDistance + this.distance;\n            //记录滚轮滚动的最大位移\n            this.changeMaxDistance = Math.max(Math.abs(this.originalDistance - distance), this.changeMaxDistance);\n            //记录当前位移\n            this.setDistance(distance);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeDistance) {\n                this.speed = changeDistance / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的Distance。之所以乘4是根据偏移效果经验得到的\n            var changeDistance = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var distance = changeDistance + this.distance;\n            //根据位移计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByDistance(distance);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小位移\n            this.maxDistance = constant_1.default.WHEEL_ITEM_HIGHT * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(位移)\n                var li = domUtil_1.default(\"<li></li>\").css('top', constant_1.default.WHEEL_ITEM_HIGHT / 100 * i + \"em\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var distance = constant_1.default.WHEEL_ITEM_HIGHT * -index;\n                //将标签的位移保存到其dom中\n                li.data(\"distance\", distance);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxDistance < 0.1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var distance = this.calcDistanceBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _Distance = animationUtil_1.default.easeOut(start, that.distance, distance - that.distance, during);\n                    if (Math.abs(_Distance - distance) < 1) {\n                        _Distance = distance;\n                    }\n                    that.setDistance(_Distance);\n                    if (_Distance != distance) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setDistance(distance);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定位移,自动设定标签的各个位置\r\n        * @param {number} distance\t\t要转到的位移\r\n        * @returns {number}\t\t\t修正后的位移,即最终的实际位移\r\n        */\n\n    }, {\n        key: \"setDistance\",\n        value: function setDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = this.rangeDistance(distance);\n            // 如果位移变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexDistance = this.lastIndexDistance;\n                var index = this.calcSelectedIndexByDistance(distance);\n                if (lastIndexDistance != index) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexDistance = index;\n            }\n            var translateValue = \"translate3d(0, \" + (constant_1.default.WHEEL_HEIGHT / 2 - constant_1.default.WHEEL_ITEM_HIGHT / 2 - distance) / 100 + \"em, 0)\";\n            this.contains.css(\"-webkit-transform\", translateValue).css(\"transform\", translateValue);\n            this.distance = distance;\n            return distance;\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByDistance\",\n        value: function calcSelectedIndexByDistance(distance) {\n            distance = this.rangeDistance(distance);\n            return Math.round(Math.abs(distance / constant_1.default.WHEEL_ITEM_HIGHT));\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param Distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcDistanceBySelectedIndex\",\n        value: function calcDistanceBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_HIGHT;\n        }\n        /**\r\n        * 限制位移超过极限值\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeDistance\",\n        value: function rangeDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = Math.max(this.minDistance, distance);\n            distance = Math.min(this.maxDistance, distance);\n            return distance;\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n    }]);\n\n    return Wheel;\n}(AWheel_1.AWheel);\n\nexports.Wheel = Wheel;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    /**\r\n     * 兼容es7的assign方法，这样可以省略polyfill\r\n     * @param {object} target\r\n     * @param {...object[]} source\r\n     * @returns {object}\r\n     */\n    assign: function assign(target) {\n        for (var _len = arguments.length, source = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            source[_key - 1] = arguments[_key];\n        }\n\n        // 第一个参数为空，则抛错\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert first argument to object');\n        }\n        var to = Object(target);\n        // 遍历剩余所有参数\n        for (var i = 1; i < arguments.length; i++) {\n            var nextSource = arguments[i];\n            // 参数为空，则跳过，继续下一个\n            if (nextSource === undefined || nextSource === null) {\n                continue;\n            }\n            nextSource = Object(nextSource);\n            // 获取改参数的所有key值，并遍历\n            var keysArray = Object.keys(nextSource);\n            for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                var nextKey = keysArray[nextIndex];\n                var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                // 如果不为空\b且可枚举，则直接浅拷贝赋值\n                if (desc !== undefined && desc.enumerable) {\n                    to[nextKey] = nextSource[nextKey];\n                }\n            }\n        }\n        return to;\n    }\n};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _domUtil = __webpack_require__(0);\n\nvar _domUtil2 = _interopRequireDefault(_domUtil);\n\nvar _em = __webpack_require__(1);\n\nvar _constant = __webpack_require__(2);\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nvar _browserUtil = __webpack_require__(3);\n\nvar _browserUtil2 = _interopRequireDefault(_browserUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// 阻止事件冒泡\nvar preventDefault = function preventDefault(e) {\n\te.preventDefault();\n};\n\n//构建主框架\nfunction Frame(picker, option) {\n\n\t//picker对象\n\tthis.picker = picker;\n\t//option\n\tthis.option = option;\n\n\t//构建cover\n\tthis.cover = (0, _domUtil2.default)(\"<div class='my-picker-cover' style='z-index: \" + option.zIndex + \"'>\").hide();\n\n\tthis.frame = (0, _domUtil2.default)('<div class=\"picker picker-frame\" style=\"z-index: ' + (option.zIndex + 1) + '\">' + '<header class=\"picker-head\">' + '<a class=\"picker-btn-cancel\"><span class=\"picker-header-text\"></span></a>' + '<h4 class=\"picker-title\"><span class=\"picker-header-text\"></span></h4>'\n\t// 未来显示多选时候使用\n\t+ '<span class=\"picker-selected\">已选0</span>' + '<a class=\"picker-btn-ok\"><span class=\"picker-header-text\"></span></a>' + '</header>' + '<div class=\"picker-body\">' + '<div class=\"picker-glass-over-border-top\">' + '</div>' + '<div class=\"picker-glass-over-border-bottom\">' + '</div>' + '</div>' + '</div>').css('height', (_constant2.default.WHEEL_HEIGHT + 15) / 100 + \"em\").hide();\n\n\t//如果是3d透视模式，增加3d透视的样式\n\tif (!_browserUtil2.default.isIE() && !(_browserUtil2.default.isAndroid() && _browserUtil2.default.androidVersion() < 4.4) && this.option.isPerspective) {\n\t\tthis.frame.addClass('s-3d').find(\".picker-body\").css(\"perspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"webkitPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"mozPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"msPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\");\n\t}\n\n\t// 修复显示模糊的问题，如果浏览器支持zoom，就s-zoom-body修复模糊的问题\n\tif (_browserUtil2.default.isWebKit() && document.body.style.zoom != undefined) {\n\t\tthis.frame.find(\".picker-body\").addClass('s-zoom-body');\n\t}\n\n\t// 如果是webkit内核，可以使用玻璃罩特性\n\tif (option.hasGlassCover == true) {\n\t\tthis.frame.addClass('s-glass-over');\n\t\tif (_browserUtil2.default.isWebKit()) {\n\t\t\tthis.frame.addClass('s-webkit-glass-over');\n\t\t}\n\t}\n\n\t//设置标题按钮名\n\tthis.frame.find(\".picker-title .picker-header-text\").text(option.title);\n\tthis.frame.find(\".picker-btn-cancel .picker-header-text\").text(option.buttons[1] || '取消');\n\tthis.frame.find(\".picker-btn-ok .picker-header-text\").text(option.buttons[0] || '确定');\n\n\t//阻止的滚轮和触摸事件冒泡，防止悲剧的滚动条在选择的时候改变\n\tthis.frame.find(\".picker-body\").on('touchstart', preventDefault);\n\tthis.frame.on('wheel', preventDefault);\n\tthis.cover.on('touchstart', preventDefault).on('wheel', preventDefault);\n\n\t(0, _domUtil2.default)(\"body\").append(this.frame).append(this.cover);\n\n\t//绑定主架的事件\n\tvar that = this;\n\tthis.frame.find(\".picker-btn-cancel\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onCancelClick == 'function') {\n\t\t\tthat.option.onCancelClick.call(that.picker);\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\tthis.frame.find(\".picker-btn-ok\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onOkClick == 'function') {\n\t\t\tvar result = that.option.onOkClick.call(that.picker, picker.getValue());\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\n\tthis._resizeHandle = function () {\n\t\tthis.frame.css('fontSize', (0, _em.em)() * 100 + 'px');\n\t}.bind(this);\n\n\twindow.addEventListener('resize', this._resizeHandle);\n\tthis._resizeHandle();\n}\n\nFrame.prototype = {\n\t//显示cover\n\tshowCover: function showCover() {\n\t\tvar _this = this;\n\n\t\tthis.cover.show();\n\t\tsetTimeout(function () {\n\t\t\t_this.cover.addClass('s-open');\n\t\t}, 0);\n\t},\n\t//隐藏cover\n\thideCover: function hideCover() {\n\t\tthis.cover.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.cover.hide();\n\t\t}, 200);\n\t},\n\t//显示frame\n\tshowFrame: function showFrame() {\n\t\tvar _this2 = this;\n\n\t\tthis.frame.show();\n\t\tsetTimeout(function () {\n\t\t\t_this2.frame.addClass('s-open');\n\t\t}, 0);\n\t},\n\t//显示frame\n\thideFrame: function hideFrame() {\n\t\tthis.frame.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.frame.hide();\n\t\t}, 200);\n\t},\n\tdom: function dom() {\n\t\treturn this.frame;\n\t},\n\tbody: function body() {\n\t\treturn this.frame.find('.picker-body');\n\t},\n\t//关闭\n\tclose: function close() {\n\t\tthis.remove();\n\t\twindow.removeEventListener('resize', this._resizeHandle);\n\t\tthis.frame.find(\".picker-body\").off('touchstart', preventDefault);\n\t\tthis.frame.off('wheel', preventDefault);\n\t\tthis.cover.off('touchstart', preventDefault).off('wheel', preventDefault);\n\t},\n\t//移除\n\tremove: function remove() {\n\t\tthis.frame.remove();\n\t}\n};\n\nmodule.exports = Frame;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=my-picker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/my-picker.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}